libsigc++ -- The Typesafe Callback Framework for C++


General information:

   libsigc++ implements a typesafe callback system for standard C++. It
   allows you to define signals and to connect those signals to any
   callback function, either global or a member function, regardless of
   whether it is static or virtual.

   libsigc++ is used by gtkmm to wrap the GTK+ signal system. It does not
   depend on GTK or gtkmm.

   Further information about the major release 2.0 is available on the
   libsigc++ project home page: http://libsigc.sourceforge.net/


License information:

   Distribution of library and components is under the LGPL as listed in the
   file COPYING. Examples and tests are Public Domain.


Contact information:
   Maintainer: mailto: mschulze@cvs.gnome.org
   Maillist: mailto: libsigc-list@gnome.org
   Homepage: http://libsigc.sourceforge.net
   Online reference documentation: http://library.gnome.org/devel/libsigc++/unstable/
   Ftp: http://ftp.gnome.org/pub/GNOME/sources/libsigc++/2.0/
   CVS:


Overview of the distribution:

   docs/                             documentation on the signal system
      docs/reference/                reference documentation
   
   examples/                         examples of various signal functions
   
   sigc++/                           source for library
      sigc++/macros/                 .m4 files used to auto-generate source files
      sigc++/functors/               source for library (various functors)
      sigc++/functors/macros/        .m4 files used to auto-generate source files
      sigc++/adaptors/               source for library (various adaptors)
      sigc++/adaptors/macros/        .m4 files used to auto-generate source files
      sigc++/adpators/lambda/        source for library (lambda library)
      sigc++/adpators/lambda/macros/ .m4 files used to auto-generate source files
   
   build/                            auxiliary files for building
   
   tests/                            programs testing and verifying proper behaviour
   
   MSVC_Net2003/                     project files for building the library with MSVC .NET 2003


Compatibility:

   Compatible compilers must supports the following recent c++ techniques:
   * Partial template (function) specialization.
   * Explicit template (member) function instantiation.
   * Treat void return as normal return.

   This release has only been tested with gcc-3.3. It should at least also compile with:
   * gcc >= 3.2
   * cygwin (gcc >= 3.2)
   * mingw32
   * Microsoft Visual Studio .Net 2003
   * Sun Forte C++ compiler >= 5.5
   * Compaq C++ compiler
   * Intel compiler
   Please report any troubles you encounter with these compilers!
   You are also invited to try a compiler that is not listed above.
