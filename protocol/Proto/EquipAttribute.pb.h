// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protocol/Proto/EquipAttribute.proto

#ifndef PROTOBUF_protocol_2fProto_2fEquipAttribute_2eproto__INCLUDED
#define PROTOBUF_protocol_2fProto_2fEquipAttribute_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protocol {
namespace item {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_protocol_2fProto_2fEquipAttribute_2eproto();
void protobuf_AssignDesc_protocol_2fProto_2fEquipAttribute_2eproto();
void protobuf_ShutdownFile_protocol_2fProto_2fEquipAttribute_2eproto();

class EquipAttribute;
class AttributeData;
class AttributeList;

// ===================================================================

class EquipAttribute : public ::google::protobuf::Message {
 public:
  EquipAttribute();
  virtual ~EquipAttribute();

  EquipAttribute(const EquipAttribute& from);

  inline EquipAttribute& operator=(const EquipAttribute& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EquipAttribute& default_instance();

  void Swap(EquipAttribute* other);

  // implements Message ----------------------------------------------

  EquipAttribute* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EquipAttribute& from);
  void MergeFrom(const EquipAttribute& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protocol.item.AttributeData attrData = 2;
  inline int attrdata_size() const;
  inline void clear_attrdata();
  static const int kAttrDataFieldNumber = 2;
  inline const ::protocol::item::AttributeData& attrdata(int index) const;
  inline ::protocol::item::AttributeData* mutable_attrdata(int index);
  inline ::protocol::item::AttributeData* add_attrdata();
  inline const ::google::protobuf::RepeatedPtrField< ::protocol::item::AttributeData >&
      attrdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::protocol::item::AttributeData >*
      mutable_attrdata();

  // @@protoc_insertion_point(class_scope:protocol.item.EquipAttribute)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::protocol::item::AttributeData > attrdata_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_protocol_2fProto_2fEquipAttribute_2eproto();
  friend void protobuf_AssignDesc_protocol_2fProto_2fEquipAttribute_2eproto();
  friend void protobuf_ShutdownFile_protocol_2fProto_2fEquipAttribute_2eproto();

  void InitAsDefaultInstance();
  static EquipAttribute* default_instance_;
};
// -------------------------------------------------------------------

class AttributeData : public ::google::protobuf::Message {
 public:
  AttributeData();
  virtual ~AttributeData();

  AttributeData(const AttributeData& from);

  inline AttributeData& operator=(const AttributeData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AttributeData& default_instance();

  void Swap(AttributeData* other);

  // implements Message ----------------------------------------------

  AttributeData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AttributeData& from);
  void MergeFrom(const AttributeData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 attrID = 1;
  inline bool has_attrid() const;
  inline void clear_attrid();
  static const int kAttrIDFieldNumber = 1;
  inline ::google::protobuf::uint32 attrid() const;
  inline void set_attrid(::google::protobuf::uint32 value);

  // required uint32 qualityID = 2;
  inline bool has_qualityid() const;
  inline void clear_qualityid();
  static const int kQualityIDFieldNumber = 2;
  inline ::google::protobuf::uint32 qualityid() const;
  inline void set_qualityid(::google::protobuf::uint32 value);

  // required uint32 attrValue = 3;
  inline bool has_attrvalue() const;
  inline void clear_attrvalue();
  static const int kAttrValueFieldNumber = 3;
  inline ::google::protobuf::uint32 attrvalue() const;
  inline void set_attrvalue(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protocol.item.AttributeData)
 private:
  inline void set_has_attrid();
  inline void clear_has_attrid();
  inline void set_has_qualityid();
  inline void clear_has_qualityid();
  inline void set_has_attrvalue();
  inline void clear_has_attrvalue();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 attrid_;
  ::google::protobuf::uint32 qualityid_;
  ::google::protobuf::uint32 attrvalue_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_protocol_2fProto_2fEquipAttribute_2eproto();
  friend void protobuf_AssignDesc_protocol_2fProto_2fEquipAttribute_2eproto();
  friend void protobuf_ShutdownFile_protocol_2fProto_2fEquipAttribute_2eproto();

  void InitAsDefaultInstance();
  static AttributeData* default_instance_;
};
// -------------------------------------------------------------------

class AttributeList : public ::google::protobuf::Message {
 public:
  AttributeList();
  virtual ~AttributeList();

  AttributeList(const AttributeList& from);

  inline AttributeList& operator=(const AttributeList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AttributeList& default_instance();

  void Swap(AttributeList* other);

  // implements Message ----------------------------------------------

  AttributeList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AttributeList& from);
  void MergeFrom(const AttributeList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 addAttackValue = 1;
  inline bool has_addattackvalue() const;
  inline void clear_addattackvalue();
  static const int kAddAttackValueFieldNumber = 1;
  inline ::google::protobuf::uint32 addattackvalue() const;
  inline void set_addattackvalue(::google::protobuf::uint32 value);

  // optional uint32 addAttackPercent = 2;
  inline bool has_addattackpercent() const;
  inline void clear_addattackpercent();
  static const int kAddAttackPercentFieldNumber = 2;
  inline ::google::protobuf::uint32 addattackpercent() const;
  inline void set_addattackpercent(::google::protobuf::uint32 value);

  // optional uint32 addDefenceValue = 3;
  inline bool has_adddefencevalue() const;
  inline void clear_adddefencevalue();
  static const int kAddDefenceValueFieldNumber = 3;
  inline ::google::protobuf::uint32 adddefencevalue() const;
  inline void set_adddefencevalue(::google::protobuf::uint32 value);

  // optional uint32 addDefencePercent = 4;
  inline bool has_adddefencepercent() const;
  inline void clear_adddefencepercent();
  static const int kAddDefencePercentFieldNumber = 4;
  inline ::google::protobuf::uint32 adddefencepercent() const;
  inline void set_adddefencepercent(::google::protobuf::uint32 value);

  // optional uint32 addMagicAttackValue = 5;
  inline bool has_addmagicattackvalue() const;
  inline void clear_addmagicattackvalue();
  static const int kAddMagicAttackValueFieldNumber = 5;
  inline ::google::protobuf::uint32 addmagicattackvalue() const;
  inline void set_addmagicattackvalue(::google::protobuf::uint32 value);

  // optional uint32 addMagicAttackPercent = 6;
  inline bool has_addmagicattackpercent() const;
  inline void clear_addmagicattackpercent();
  static const int kAddMagicAttackPercentFieldNumber = 6;
  inline ::google::protobuf::uint32 addmagicattackpercent() const;
  inline void set_addmagicattackpercent(::google::protobuf::uint32 value);

  // optional uint32 addMPValue = 7;
  inline bool has_addmpvalue() const;
  inline void clear_addmpvalue();
  static const int kAddMPValueFieldNumber = 7;
  inline ::google::protobuf::uint32 addmpvalue() const;
  inline void set_addmpvalue(::google::protobuf::uint32 value);

  // optional uint32 addMPPercent = 8;
  inline bool has_addmppercent() const;
  inline void clear_addmppercent();
  static const int kAddMPPercentFieldNumber = 8;
  inline ::google::protobuf::uint32 addmppercent() const;
  inline void set_addmppercent(::google::protobuf::uint32 value);

  // optional uint32 addHPValue = 9;
  inline bool has_addhpvalue() const;
  inline void clear_addhpvalue();
  static const int kAddHPValueFieldNumber = 9;
  inline ::google::protobuf::uint32 addhpvalue() const;
  inline void set_addhpvalue(::google::protobuf::uint32 value);

  // optional uint32 addHPPercent = 10;
  inline bool has_addhppercent() const;
  inline void clear_addhppercent();
  static const int kAddHPPercentFieldNumber = 10;
  inline ::google::protobuf::uint32 addhppercent() const;
  inline void set_addhppercent(::google::protobuf::uint32 value);

  // optional uint32 addMagicDefenceValue = 11;
  inline bool has_addmagicdefencevalue() const;
  inline void clear_addmagicdefencevalue();
  static const int kAddMagicDefenceValueFieldNumber = 11;
  inline ::google::protobuf::uint32 addmagicdefencevalue() const;
  inline void set_addmagicdefencevalue(::google::protobuf::uint32 value);

  // optional uint32 addMagicDefencePercent = 12;
  inline bool has_addmagicdefencepercent() const;
  inline void clear_addmagicdefencepercent();
  static const int kAddMagicDefencePercentFieldNumber = 12;
  inline ::google::protobuf::uint32 addmagicdefencepercent() const;
  inline void set_addmagicdefencepercent(::google::protobuf::uint32 value);

  // optional uint32 subRemoteHurt = 13;
  inline bool has_subremotehurt() const;
  inline void clear_subremotehurt();
  static const int kSubRemoteHurtFieldNumber = 13;
  inline ::google::protobuf::uint32 subremotehurt() const;
  inline void set_subremotehurt(::google::protobuf::uint32 value);

  // optional uint32 subCloseHurt = 14;
  inline bool has_subclosehurt() const;
  inline void clear_subclosehurt();
  static const int kSubCloseHurtFieldNumber = 14;
  inline ::google::protobuf::uint32 subclosehurt() const;
  inline void set_subclosehurt(::google::protobuf::uint32 value);

  // optional uint32 subNormalHurt = 15;
  inline bool has_subnormalhurt() const;
  inline void clear_subnormalhurt();
  static const int kSubNormalHurtFieldNumber = 15;
  inline ::google::protobuf::uint32 subnormalhurt() const;
  inline void set_subnormalhurt(::google::protobuf::uint32 value);

  // optional uint32 subMagicHurt = 16;
  inline bool has_submagichurt() const;
  inline void clear_submagichurt();
  static const int kSubMagicHurtFieldNumber = 16;
  inline ::google::protobuf::uint32 submagichurt() const;
  inline void set_submagichurt(::google::protobuf::uint32 value);

  // optional uint32 hitValue = 17;
  inline bool has_hitvalue() const;
  inline void clear_hitvalue();
  static const int kHitValueFieldNumber = 17;
  inline ::google::protobuf::uint32 hitvalue() const;
  inline void set_hitvalue(::google::protobuf::uint32 value);

  // optional uint32 appendHit = 18;
  inline bool has_appendhit() const;
  inline void clear_appendhit();
  static const int kAppendHitFieldNumber = 18;
  inline ::google::protobuf::uint32 appendhit() const;
  inline void set_appendhit(::google::protobuf::uint32 value);

  // optional uint32 avoidValue = 19;
  inline bool has_avoidvalue() const;
  inline void clear_avoidvalue();
  static const int kAvoidValueFieldNumber = 19;
  inline ::google::protobuf::uint32 avoidvalue() const;
  inline void set_avoidvalue(::google::protobuf::uint32 value);

  // optional uint32 appendAvoid = 20;
  inline bool has_appendavoid() const;
  inline void clear_appendavoid();
  static const int kAppendAvoidFieldNumber = 20;
  inline ::google::protobuf::uint32 appendavoid() const;
  inline void set_appendavoid(::google::protobuf::uint32 value);

  // optional uint32 crit = 21;
  inline bool has_crit() const;
  inline void clear_crit();
  static const int kCritFieldNumber = 21;
  inline ::google::protobuf::uint32 crit() const;
  inline void set_crit(::google::protobuf::uint32 value);

  // optional uint32 appendCrit = 22;
  inline bool has_appendcrit() const;
  inline void clear_appendcrit();
  static const int kAppendCritFieldNumber = 22;
  inline ::google::protobuf::uint32 appendcrit() const;
  inline void set_appendcrit(::google::protobuf::uint32 value);

  // optional uint32 critDefence = 23;
  inline bool has_critdefence() const;
  inline void clear_critdefence();
  static const int kCritDefenceFieldNumber = 23;
  inline ::google::protobuf::uint32 critdefence() const;
  inline void set_critdefence(::google::protobuf::uint32 value);

  // optional uint32 appendCritDefence = 24;
  inline bool has_appendcritdefence() const;
  inline void clear_appendcritdefence();
  static const int kAppendCritDefenceFieldNumber = 24;
  inline ::google::protobuf::uint32 appendcritdefence() const;
  inline void set_appendcritdefence(::google::protobuf::uint32 value);

  // optional uint32 critValue = 25;
  inline bool has_critvalue() const;
  inline void clear_critvalue();
  static const int kCritValueFieldNumber = 25;
  inline ::google::protobuf::uint32 critvalue() const;
  inline void set_critvalue(::google::protobuf::uint32 value);

  // optional uint32 pureDamage = 26;
  inline bool has_puredamage() const;
  inline void clear_puredamage();
  static const int kPureDamageFieldNumber = 26;
  inline ::google::protobuf::uint32 puredamage() const;
  inline void set_puredamage(::google::protobuf::uint32 value);

  // optional uint32 absorbBlood = 27;
  inline bool has_absorbblood() const;
  inline void clear_absorbblood();
  static const int kAbsorbBloodFieldNumber = 27;
  inline ::google::protobuf::uint32 absorbblood() const;
  inline void set_absorbblood(::google::protobuf::uint32 value);

  // optional uint32 rebound = 28;
  inline bool has_rebound() const;
  inline void clear_rebound();
  static const int kReboundFieldNumber = 28;
  inline ::google::protobuf::uint32 rebound() const;
  inline void set_rebound(::google::protobuf::uint32 value);

  // optional uint32 reboundPercent = 29;
  inline bool has_reboundpercent() const;
  inline void clear_reboundpercent();
  static const int kReboundPercentFieldNumber = 29;
  inline ::google::protobuf::uint32 reboundpercent() const;
  inline void set_reboundpercent(::google::protobuf::uint32 value);

  // optional uint32 killAddHP = 30;
  inline bool has_killaddhp() const;
  inline void clear_killaddhp();
  static const int kKillAddHPFieldNumber = 30;
  inline ::google::protobuf::uint32 killaddhp() const;
  inline void set_killaddhp(::google::protobuf::uint32 value);

  // optional uint32 hitAddHP = 31;
  inline bool has_hitaddhp() const;
  inline void clear_hitaddhp();
  static const int kHitAddHPFieldNumber = 31;
  inline ::google::protobuf::uint32 hitaddhp() const;
  inline void set_hitaddhp(::google::protobuf::uint32 value);

  // optional uint32 beAttackAddHP = 32;
  inline bool has_beattackaddhp() const;
  inline void clear_beattackaddhp();
  static const int kBeAttackAddHPFieldNumber = 32;
  inline ::google::protobuf::uint32 beattackaddhp() const;
  inline void set_beattackaddhp(::google::protobuf::uint32 value);

  // optional uint32 killAddMP = 33;
  inline bool has_killaddmp() const;
  inline void clear_killaddmp();
  static const int kKillAddMPFieldNumber = 33;
  inline ::google::protobuf::uint32 killaddmp() const;
  inline void set_killaddmp(::google::protobuf::uint32 value);

  // optional uint32 hitAddMP = 34;
  inline bool has_hitaddmp() const;
  inline void clear_hitaddmp();
  static const int kHitAddMPFieldNumber = 34;
  inline ::google::protobuf::uint32 hitaddmp() const;
  inline void set_hitaddmp(::google::protobuf::uint32 value);

  // optional uint32 beAttackAddMP = 35;
  inline bool has_beattackaddmp() const;
  inline void clear_beattackaddmp();
  static const int kBeAttackAddMPFieldNumber = 35;
  inline ::google::protobuf::uint32 beattackaddmp() const;
  inline void set_beattackaddmp(::google::protobuf::uint32 value);

  // optional uint32 addMoveSpeed = 36;
  inline bool has_addmovespeed() const;
  inline void clear_addmovespeed();
  static const int kAddMoveSpeedFieldNumber = 36;
  inline ::google::protobuf::uint32 addmovespeed() const;
  inline void set_addmovespeed(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protocol.item.AttributeList)
 private:
  inline void set_has_addattackvalue();
  inline void clear_has_addattackvalue();
  inline void set_has_addattackpercent();
  inline void clear_has_addattackpercent();
  inline void set_has_adddefencevalue();
  inline void clear_has_adddefencevalue();
  inline void set_has_adddefencepercent();
  inline void clear_has_adddefencepercent();
  inline void set_has_addmagicattackvalue();
  inline void clear_has_addmagicattackvalue();
  inline void set_has_addmagicattackpercent();
  inline void clear_has_addmagicattackpercent();
  inline void set_has_addmpvalue();
  inline void clear_has_addmpvalue();
  inline void set_has_addmppercent();
  inline void clear_has_addmppercent();
  inline void set_has_addhpvalue();
  inline void clear_has_addhpvalue();
  inline void set_has_addhppercent();
  inline void clear_has_addhppercent();
  inline void set_has_addmagicdefencevalue();
  inline void clear_has_addmagicdefencevalue();
  inline void set_has_addmagicdefencepercent();
  inline void clear_has_addmagicdefencepercent();
  inline void set_has_subremotehurt();
  inline void clear_has_subremotehurt();
  inline void set_has_subclosehurt();
  inline void clear_has_subclosehurt();
  inline void set_has_subnormalhurt();
  inline void clear_has_subnormalhurt();
  inline void set_has_submagichurt();
  inline void clear_has_submagichurt();
  inline void set_has_hitvalue();
  inline void clear_has_hitvalue();
  inline void set_has_appendhit();
  inline void clear_has_appendhit();
  inline void set_has_avoidvalue();
  inline void clear_has_avoidvalue();
  inline void set_has_appendavoid();
  inline void clear_has_appendavoid();
  inline void set_has_crit();
  inline void clear_has_crit();
  inline void set_has_appendcrit();
  inline void clear_has_appendcrit();
  inline void set_has_critdefence();
  inline void clear_has_critdefence();
  inline void set_has_appendcritdefence();
  inline void clear_has_appendcritdefence();
  inline void set_has_critvalue();
  inline void clear_has_critvalue();
  inline void set_has_puredamage();
  inline void clear_has_puredamage();
  inline void set_has_absorbblood();
  inline void clear_has_absorbblood();
  inline void set_has_rebound();
  inline void clear_has_rebound();
  inline void set_has_reboundpercent();
  inline void clear_has_reboundpercent();
  inline void set_has_killaddhp();
  inline void clear_has_killaddhp();
  inline void set_has_hitaddhp();
  inline void clear_has_hitaddhp();
  inline void set_has_beattackaddhp();
  inline void clear_has_beattackaddhp();
  inline void set_has_killaddmp();
  inline void clear_has_killaddmp();
  inline void set_has_hitaddmp();
  inline void clear_has_hitaddmp();
  inline void set_has_beattackaddmp();
  inline void clear_has_beattackaddmp();
  inline void set_has_addmovespeed();
  inline void clear_has_addmovespeed();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 addattackvalue_;
  ::google::protobuf::uint32 addattackpercent_;
  ::google::protobuf::uint32 adddefencevalue_;
  ::google::protobuf::uint32 adddefencepercent_;
  ::google::protobuf::uint32 addmagicattackvalue_;
  ::google::protobuf::uint32 addmagicattackpercent_;
  ::google::protobuf::uint32 addmpvalue_;
  ::google::protobuf::uint32 addmppercent_;
  ::google::protobuf::uint32 addhpvalue_;
  ::google::protobuf::uint32 addhppercent_;
  ::google::protobuf::uint32 addmagicdefencevalue_;
  ::google::protobuf::uint32 addmagicdefencepercent_;
  ::google::protobuf::uint32 subremotehurt_;
  ::google::protobuf::uint32 subclosehurt_;
  ::google::protobuf::uint32 subnormalhurt_;
  ::google::protobuf::uint32 submagichurt_;
  ::google::protobuf::uint32 hitvalue_;
  ::google::protobuf::uint32 appendhit_;
  ::google::protobuf::uint32 avoidvalue_;
  ::google::protobuf::uint32 appendavoid_;
  ::google::protobuf::uint32 crit_;
  ::google::protobuf::uint32 appendcrit_;
  ::google::protobuf::uint32 critdefence_;
  ::google::protobuf::uint32 appendcritdefence_;
  ::google::protobuf::uint32 critvalue_;
  ::google::protobuf::uint32 puredamage_;
  ::google::protobuf::uint32 absorbblood_;
  ::google::protobuf::uint32 rebound_;
  ::google::protobuf::uint32 reboundpercent_;
  ::google::protobuf::uint32 killaddhp_;
  ::google::protobuf::uint32 hitaddhp_;
  ::google::protobuf::uint32 beattackaddhp_;
  ::google::protobuf::uint32 killaddmp_;
  ::google::protobuf::uint32 hitaddmp_;
  ::google::protobuf::uint32 beattackaddmp_;
  ::google::protobuf::uint32 addmovespeed_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(36 + 31) / 32];

  friend void  protobuf_AddDesc_protocol_2fProto_2fEquipAttribute_2eproto();
  friend void protobuf_AssignDesc_protocol_2fProto_2fEquipAttribute_2eproto();
  friend void protobuf_ShutdownFile_protocol_2fProto_2fEquipAttribute_2eproto();

  void InitAsDefaultInstance();
  static AttributeList* default_instance_;
};
// ===================================================================


// ===================================================================

// EquipAttribute

// repeated .protocol.item.AttributeData attrData = 2;
inline int EquipAttribute::attrdata_size() const {
  return attrdata_.size();
}
inline void EquipAttribute::clear_attrdata() {
  attrdata_.Clear();
}
inline const ::protocol::item::AttributeData& EquipAttribute::attrdata(int index) const {
  return attrdata_.Get(index);
}
inline ::protocol::item::AttributeData* EquipAttribute::mutable_attrdata(int index) {
  return attrdata_.Mutable(index);
}
inline ::protocol::item::AttributeData* EquipAttribute::add_attrdata() {
  return attrdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::item::AttributeData >&
EquipAttribute::attrdata() const {
  return attrdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::item::AttributeData >*
EquipAttribute::mutable_attrdata() {
  return &attrdata_;
}

// -------------------------------------------------------------------

// AttributeData

// required uint32 attrID = 1;
inline bool AttributeData::has_attrid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AttributeData::set_has_attrid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AttributeData::clear_has_attrid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AttributeData::clear_attrid() {
  attrid_ = 0u;
  clear_has_attrid();
}
inline ::google::protobuf::uint32 AttributeData::attrid() const {
  return attrid_;
}
inline void AttributeData::set_attrid(::google::protobuf::uint32 value) {
  set_has_attrid();
  attrid_ = value;
}

// required uint32 qualityID = 2;
inline bool AttributeData::has_qualityid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AttributeData::set_has_qualityid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AttributeData::clear_has_qualityid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AttributeData::clear_qualityid() {
  qualityid_ = 0u;
  clear_has_qualityid();
}
inline ::google::protobuf::uint32 AttributeData::qualityid() const {
  return qualityid_;
}
inline void AttributeData::set_qualityid(::google::protobuf::uint32 value) {
  set_has_qualityid();
  qualityid_ = value;
}

// required uint32 attrValue = 3;
inline bool AttributeData::has_attrvalue() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AttributeData::set_has_attrvalue() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AttributeData::clear_has_attrvalue() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AttributeData::clear_attrvalue() {
  attrvalue_ = 0u;
  clear_has_attrvalue();
}
inline ::google::protobuf::uint32 AttributeData::attrvalue() const {
  return attrvalue_;
}
inline void AttributeData::set_attrvalue(::google::protobuf::uint32 value) {
  set_has_attrvalue();
  attrvalue_ = value;
}

// -------------------------------------------------------------------

// AttributeList

// optional uint32 addAttackValue = 1;
inline bool AttributeList::has_addattackvalue() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AttributeList::set_has_addattackvalue() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AttributeList::clear_has_addattackvalue() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AttributeList::clear_addattackvalue() {
  addattackvalue_ = 0u;
  clear_has_addattackvalue();
}
inline ::google::protobuf::uint32 AttributeList::addattackvalue() const {
  return addattackvalue_;
}
inline void AttributeList::set_addattackvalue(::google::protobuf::uint32 value) {
  set_has_addattackvalue();
  addattackvalue_ = value;
}

// optional uint32 addAttackPercent = 2;
inline bool AttributeList::has_addattackpercent() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AttributeList::set_has_addattackpercent() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AttributeList::clear_has_addattackpercent() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AttributeList::clear_addattackpercent() {
  addattackpercent_ = 0u;
  clear_has_addattackpercent();
}
inline ::google::protobuf::uint32 AttributeList::addattackpercent() const {
  return addattackpercent_;
}
inline void AttributeList::set_addattackpercent(::google::protobuf::uint32 value) {
  set_has_addattackpercent();
  addattackpercent_ = value;
}

// optional uint32 addDefenceValue = 3;
inline bool AttributeList::has_adddefencevalue() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AttributeList::set_has_adddefencevalue() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AttributeList::clear_has_adddefencevalue() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AttributeList::clear_adddefencevalue() {
  adddefencevalue_ = 0u;
  clear_has_adddefencevalue();
}
inline ::google::protobuf::uint32 AttributeList::adddefencevalue() const {
  return adddefencevalue_;
}
inline void AttributeList::set_adddefencevalue(::google::protobuf::uint32 value) {
  set_has_adddefencevalue();
  adddefencevalue_ = value;
}

// optional uint32 addDefencePercent = 4;
inline bool AttributeList::has_adddefencepercent() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AttributeList::set_has_adddefencepercent() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AttributeList::clear_has_adddefencepercent() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AttributeList::clear_adddefencepercent() {
  adddefencepercent_ = 0u;
  clear_has_adddefencepercent();
}
inline ::google::protobuf::uint32 AttributeList::adddefencepercent() const {
  return adddefencepercent_;
}
inline void AttributeList::set_adddefencepercent(::google::protobuf::uint32 value) {
  set_has_adddefencepercent();
  adddefencepercent_ = value;
}

// optional uint32 addMagicAttackValue = 5;
inline bool AttributeList::has_addmagicattackvalue() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AttributeList::set_has_addmagicattackvalue() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AttributeList::clear_has_addmagicattackvalue() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AttributeList::clear_addmagicattackvalue() {
  addmagicattackvalue_ = 0u;
  clear_has_addmagicattackvalue();
}
inline ::google::protobuf::uint32 AttributeList::addmagicattackvalue() const {
  return addmagicattackvalue_;
}
inline void AttributeList::set_addmagicattackvalue(::google::protobuf::uint32 value) {
  set_has_addmagicattackvalue();
  addmagicattackvalue_ = value;
}

// optional uint32 addMagicAttackPercent = 6;
inline bool AttributeList::has_addmagicattackpercent() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AttributeList::set_has_addmagicattackpercent() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AttributeList::clear_has_addmagicattackpercent() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AttributeList::clear_addmagicattackpercent() {
  addmagicattackpercent_ = 0u;
  clear_has_addmagicattackpercent();
}
inline ::google::protobuf::uint32 AttributeList::addmagicattackpercent() const {
  return addmagicattackpercent_;
}
inline void AttributeList::set_addmagicattackpercent(::google::protobuf::uint32 value) {
  set_has_addmagicattackpercent();
  addmagicattackpercent_ = value;
}

// optional uint32 addMPValue = 7;
inline bool AttributeList::has_addmpvalue() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void AttributeList::set_has_addmpvalue() {
  _has_bits_[0] |= 0x00000040u;
}
inline void AttributeList::clear_has_addmpvalue() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void AttributeList::clear_addmpvalue() {
  addmpvalue_ = 0u;
  clear_has_addmpvalue();
}
inline ::google::protobuf::uint32 AttributeList::addmpvalue() const {
  return addmpvalue_;
}
inline void AttributeList::set_addmpvalue(::google::protobuf::uint32 value) {
  set_has_addmpvalue();
  addmpvalue_ = value;
}

// optional uint32 addMPPercent = 8;
inline bool AttributeList::has_addmppercent() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void AttributeList::set_has_addmppercent() {
  _has_bits_[0] |= 0x00000080u;
}
inline void AttributeList::clear_has_addmppercent() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void AttributeList::clear_addmppercent() {
  addmppercent_ = 0u;
  clear_has_addmppercent();
}
inline ::google::protobuf::uint32 AttributeList::addmppercent() const {
  return addmppercent_;
}
inline void AttributeList::set_addmppercent(::google::protobuf::uint32 value) {
  set_has_addmppercent();
  addmppercent_ = value;
}

// optional uint32 addHPValue = 9;
inline bool AttributeList::has_addhpvalue() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void AttributeList::set_has_addhpvalue() {
  _has_bits_[0] |= 0x00000100u;
}
inline void AttributeList::clear_has_addhpvalue() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void AttributeList::clear_addhpvalue() {
  addhpvalue_ = 0u;
  clear_has_addhpvalue();
}
inline ::google::protobuf::uint32 AttributeList::addhpvalue() const {
  return addhpvalue_;
}
inline void AttributeList::set_addhpvalue(::google::protobuf::uint32 value) {
  set_has_addhpvalue();
  addhpvalue_ = value;
}

// optional uint32 addHPPercent = 10;
inline bool AttributeList::has_addhppercent() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void AttributeList::set_has_addhppercent() {
  _has_bits_[0] |= 0x00000200u;
}
inline void AttributeList::clear_has_addhppercent() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void AttributeList::clear_addhppercent() {
  addhppercent_ = 0u;
  clear_has_addhppercent();
}
inline ::google::protobuf::uint32 AttributeList::addhppercent() const {
  return addhppercent_;
}
inline void AttributeList::set_addhppercent(::google::protobuf::uint32 value) {
  set_has_addhppercent();
  addhppercent_ = value;
}

// optional uint32 addMagicDefenceValue = 11;
inline bool AttributeList::has_addmagicdefencevalue() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void AttributeList::set_has_addmagicdefencevalue() {
  _has_bits_[0] |= 0x00000400u;
}
inline void AttributeList::clear_has_addmagicdefencevalue() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void AttributeList::clear_addmagicdefencevalue() {
  addmagicdefencevalue_ = 0u;
  clear_has_addmagicdefencevalue();
}
inline ::google::protobuf::uint32 AttributeList::addmagicdefencevalue() const {
  return addmagicdefencevalue_;
}
inline void AttributeList::set_addmagicdefencevalue(::google::protobuf::uint32 value) {
  set_has_addmagicdefencevalue();
  addmagicdefencevalue_ = value;
}

// optional uint32 addMagicDefencePercent = 12;
inline bool AttributeList::has_addmagicdefencepercent() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void AttributeList::set_has_addmagicdefencepercent() {
  _has_bits_[0] |= 0x00000800u;
}
inline void AttributeList::clear_has_addmagicdefencepercent() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void AttributeList::clear_addmagicdefencepercent() {
  addmagicdefencepercent_ = 0u;
  clear_has_addmagicdefencepercent();
}
inline ::google::protobuf::uint32 AttributeList::addmagicdefencepercent() const {
  return addmagicdefencepercent_;
}
inline void AttributeList::set_addmagicdefencepercent(::google::protobuf::uint32 value) {
  set_has_addmagicdefencepercent();
  addmagicdefencepercent_ = value;
}

// optional uint32 subRemoteHurt = 13;
inline bool AttributeList::has_subremotehurt() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void AttributeList::set_has_subremotehurt() {
  _has_bits_[0] |= 0x00001000u;
}
inline void AttributeList::clear_has_subremotehurt() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void AttributeList::clear_subremotehurt() {
  subremotehurt_ = 0u;
  clear_has_subremotehurt();
}
inline ::google::protobuf::uint32 AttributeList::subremotehurt() const {
  return subremotehurt_;
}
inline void AttributeList::set_subremotehurt(::google::protobuf::uint32 value) {
  set_has_subremotehurt();
  subremotehurt_ = value;
}

// optional uint32 subCloseHurt = 14;
inline bool AttributeList::has_subclosehurt() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void AttributeList::set_has_subclosehurt() {
  _has_bits_[0] |= 0x00002000u;
}
inline void AttributeList::clear_has_subclosehurt() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void AttributeList::clear_subclosehurt() {
  subclosehurt_ = 0u;
  clear_has_subclosehurt();
}
inline ::google::protobuf::uint32 AttributeList::subclosehurt() const {
  return subclosehurt_;
}
inline void AttributeList::set_subclosehurt(::google::protobuf::uint32 value) {
  set_has_subclosehurt();
  subclosehurt_ = value;
}

// optional uint32 subNormalHurt = 15;
inline bool AttributeList::has_subnormalhurt() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void AttributeList::set_has_subnormalhurt() {
  _has_bits_[0] |= 0x00004000u;
}
inline void AttributeList::clear_has_subnormalhurt() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void AttributeList::clear_subnormalhurt() {
  subnormalhurt_ = 0u;
  clear_has_subnormalhurt();
}
inline ::google::protobuf::uint32 AttributeList::subnormalhurt() const {
  return subnormalhurt_;
}
inline void AttributeList::set_subnormalhurt(::google::protobuf::uint32 value) {
  set_has_subnormalhurt();
  subnormalhurt_ = value;
}

// optional uint32 subMagicHurt = 16;
inline bool AttributeList::has_submagichurt() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void AttributeList::set_has_submagichurt() {
  _has_bits_[0] |= 0x00008000u;
}
inline void AttributeList::clear_has_submagichurt() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void AttributeList::clear_submagichurt() {
  submagichurt_ = 0u;
  clear_has_submagichurt();
}
inline ::google::protobuf::uint32 AttributeList::submagichurt() const {
  return submagichurt_;
}
inline void AttributeList::set_submagichurt(::google::protobuf::uint32 value) {
  set_has_submagichurt();
  submagichurt_ = value;
}

// optional uint32 hitValue = 17;
inline bool AttributeList::has_hitvalue() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void AttributeList::set_has_hitvalue() {
  _has_bits_[0] |= 0x00010000u;
}
inline void AttributeList::clear_has_hitvalue() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void AttributeList::clear_hitvalue() {
  hitvalue_ = 0u;
  clear_has_hitvalue();
}
inline ::google::protobuf::uint32 AttributeList::hitvalue() const {
  return hitvalue_;
}
inline void AttributeList::set_hitvalue(::google::protobuf::uint32 value) {
  set_has_hitvalue();
  hitvalue_ = value;
}

// optional uint32 appendHit = 18;
inline bool AttributeList::has_appendhit() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void AttributeList::set_has_appendhit() {
  _has_bits_[0] |= 0x00020000u;
}
inline void AttributeList::clear_has_appendhit() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void AttributeList::clear_appendhit() {
  appendhit_ = 0u;
  clear_has_appendhit();
}
inline ::google::protobuf::uint32 AttributeList::appendhit() const {
  return appendhit_;
}
inline void AttributeList::set_appendhit(::google::protobuf::uint32 value) {
  set_has_appendhit();
  appendhit_ = value;
}

// optional uint32 avoidValue = 19;
inline bool AttributeList::has_avoidvalue() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void AttributeList::set_has_avoidvalue() {
  _has_bits_[0] |= 0x00040000u;
}
inline void AttributeList::clear_has_avoidvalue() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void AttributeList::clear_avoidvalue() {
  avoidvalue_ = 0u;
  clear_has_avoidvalue();
}
inline ::google::protobuf::uint32 AttributeList::avoidvalue() const {
  return avoidvalue_;
}
inline void AttributeList::set_avoidvalue(::google::protobuf::uint32 value) {
  set_has_avoidvalue();
  avoidvalue_ = value;
}

// optional uint32 appendAvoid = 20;
inline bool AttributeList::has_appendavoid() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void AttributeList::set_has_appendavoid() {
  _has_bits_[0] |= 0x00080000u;
}
inline void AttributeList::clear_has_appendavoid() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void AttributeList::clear_appendavoid() {
  appendavoid_ = 0u;
  clear_has_appendavoid();
}
inline ::google::protobuf::uint32 AttributeList::appendavoid() const {
  return appendavoid_;
}
inline void AttributeList::set_appendavoid(::google::protobuf::uint32 value) {
  set_has_appendavoid();
  appendavoid_ = value;
}

// optional uint32 crit = 21;
inline bool AttributeList::has_crit() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void AttributeList::set_has_crit() {
  _has_bits_[0] |= 0x00100000u;
}
inline void AttributeList::clear_has_crit() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void AttributeList::clear_crit() {
  crit_ = 0u;
  clear_has_crit();
}
inline ::google::protobuf::uint32 AttributeList::crit() const {
  return crit_;
}
inline void AttributeList::set_crit(::google::protobuf::uint32 value) {
  set_has_crit();
  crit_ = value;
}

// optional uint32 appendCrit = 22;
inline bool AttributeList::has_appendcrit() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void AttributeList::set_has_appendcrit() {
  _has_bits_[0] |= 0x00200000u;
}
inline void AttributeList::clear_has_appendcrit() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void AttributeList::clear_appendcrit() {
  appendcrit_ = 0u;
  clear_has_appendcrit();
}
inline ::google::protobuf::uint32 AttributeList::appendcrit() const {
  return appendcrit_;
}
inline void AttributeList::set_appendcrit(::google::protobuf::uint32 value) {
  set_has_appendcrit();
  appendcrit_ = value;
}

// optional uint32 critDefence = 23;
inline bool AttributeList::has_critdefence() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void AttributeList::set_has_critdefence() {
  _has_bits_[0] |= 0x00400000u;
}
inline void AttributeList::clear_has_critdefence() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void AttributeList::clear_critdefence() {
  critdefence_ = 0u;
  clear_has_critdefence();
}
inline ::google::protobuf::uint32 AttributeList::critdefence() const {
  return critdefence_;
}
inline void AttributeList::set_critdefence(::google::protobuf::uint32 value) {
  set_has_critdefence();
  critdefence_ = value;
}

// optional uint32 appendCritDefence = 24;
inline bool AttributeList::has_appendcritdefence() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void AttributeList::set_has_appendcritdefence() {
  _has_bits_[0] |= 0x00800000u;
}
inline void AttributeList::clear_has_appendcritdefence() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void AttributeList::clear_appendcritdefence() {
  appendcritdefence_ = 0u;
  clear_has_appendcritdefence();
}
inline ::google::protobuf::uint32 AttributeList::appendcritdefence() const {
  return appendcritdefence_;
}
inline void AttributeList::set_appendcritdefence(::google::protobuf::uint32 value) {
  set_has_appendcritdefence();
  appendcritdefence_ = value;
}

// optional uint32 critValue = 25;
inline bool AttributeList::has_critvalue() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void AttributeList::set_has_critvalue() {
  _has_bits_[0] |= 0x01000000u;
}
inline void AttributeList::clear_has_critvalue() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void AttributeList::clear_critvalue() {
  critvalue_ = 0u;
  clear_has_critvalue();
}
inline ::google::protobuf::uint32 AttributeList::critvalue() const {
  return critvalue_;
}
inline void AttributeList::set_critvalue(::google::protobuf::uint32 value) {
  set_has_critvalue();
  critvalue_ = value;
}

// optional uint32 pureDamage = 26;
inline bool AttributeList::has_puredamage() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void AttributeList::set_has_puredamage() {
  _has_bits_[0] |= 0x02000000u;
}
inline void AttributeList::clear_has_puredamage() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void AttributeList::clear_puredamage() {
  puredamage_ = 0u;
  clear_has_puredamage();
}
inline ::google::protobuf::uint32 AttributeList::puredamage() const {
  return puredamage_;
}
inline void AttributeList::set_puredamage(::google::protobuf::uint32 value) {
  set_has_puredamage();
  puredamage_ = value;
}

// optional uint32 absorbBlood = 27;
inline bool AttributeList::has_absorbblood() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void AttributeList::set_has_absorbblood() {
  _has_bits_[0] |= 0x04000000u;
}
inline void AttributeList::clear_has_absorbblood() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void AttributeList::clear_absorbblood() {
  absorbblood_ = 0u;
  clear_has_absorbblood();
}
inline ::google::protobuf::uint32 AttributeList::absorbblood() const {
  return absorbblood_;
}
inline void AttributeList::set_absorbblood(::google::protobuf::uint32 value) {
  set_has_absorbblood();
  absorbblood_ = value;
}

// optional uint32 rebound = 28;
inline bool AttributeList::has_rebound() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void AttributeList::set_has_rebound() {
  _has_bits_[0] |= 0x08000000u;
}
inline void AttributeList::clear_has_rebound() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void AttributeList::clear_rebound() {
  rebound_ = 0u;
  clear_has_rebound();
}
inline ::google::protobuf::uint32 AttributeList::rebound() const {
  return rebound_;
}
inline void AttributeList::set_rebound(::google::protobuf::uint32 value) {
  set_has_rebound();
  rebound_ = value;
}

// optional uint32 reboundPercent = 29;
inline bool AttributeList::has_reboundpercent() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void AttributeList::set_has_reboundpercent() {
  _has_bits_[0] |= 0x10000000u;
}
inline void AttributeList::clear_has_reboundpercent() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void AttributeList::clear_reboundpercent() {
  reboundpercent_ = 0u;
  clear_has_reboundpercent();
}
inline ::google::protobuf::uint32 AttributeList::reboundpercent() const {
  return reboundpercent_;
}
inline void AttributeList::set_reboundpercent(::google::protobuf::uint32 value) {
  set_has_reboundpercent();
  reboundpercent_ = value;
}

// optional uint32 killAddHP = 30;
inline bool AttributeList::has_killaddhp() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void AttributeList::set_has_killaddhp() {
  _has_bits_[0] |= 0x20000000u;
}
inline void AttributeList::clear_has_killaddhp() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void AttributeList::clear_killaddhp() {
  killaddhp_ = 0u;
  clear_has_killaddhp();
}
inline ::google::protobuf::uint32 AttributeList::killaddhp() const {
  return killaddhp_;
}
inline void AttributeList::set_killaddhp(::google::protobuf::uint32 value) {
  set_has_killaddhp();
  killaddhp_ = value;
}

// optional uint32 hitAddHP = 31;
inline bool AttributeList::has_hitaddhp() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void AttributeList::set_has_hitaddhp() {
  _has_bits_[0] |= 0x40000000u;
}
inline void AttributeList::clear_has_hitaddhp() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void AttributeList::clear_hitaddhp() {
  hitaddhp_ = 0u;
  clear_has_hitaddhp();
}
inline ::google::protobuf::uint32 AttributeList::hitaddhp() const {
  return hitaddhp_;
}
inline void AttributeList::set_hitaddhp(::google::protobuf::uint32 value) {
  set_has_hitaddhp();
  hitaddhp_ = value;
}

// optional uint32 beAttackAddHP = 32;
inline bool AttributeList::has_beattackaddhp() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void AttributeList::set_has_beattackaddhp() {
  _has_bits_[0] |= 0x80000000u;
}
inline void AttributeList::clear_has_beattackaddhp() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void AttributeList::clear_beattackaddhp() {
  beattackaddhp_ = 0u;
  clear_has_beattackaddhp();
}
inline ::google::protobuf::uint32 AttributeList::beattackaddhp() const {
  return beattackaddhp_;
}
inline void AttributeList::set_beattackaddhp(::google::protobuf::uint32 value) {
  set_has_beattackaddhp();
  beattackaddhp_ = value;
}

// optional uint32 killAddMP = 33;
inline bool AttributeList::has_killaddmp() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void AttributeList::set_has_killaddmp() {
  _has_bits_[1] |= 0x00000001u;
}
inline void AttributeList::clear_has_killaddmp() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void AttributeList::clear_killaddmp() {
  killaddmp_ = 0u;
  clear_has_killaddmp();
}
inline ::google::protobuf::uint32 AttributeList::killaddmp() const {
  return killaddmp_;
}
inline void AttributeList::set_killaddmp(::google::protobuf::uint32 value) {
  set_has_killaddmp();
  killaddmp_ = value;
}

// optional uint32 hitAddMP = 34;
inline bool AttributeList::has_hitaddmp() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void AttributeList::set_has_hitaddmp() {
  _has_bits_[1] |= 0x00000002u;
}
inline void AttributeList::clear_has_hitaddmp() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void AttributeList::clear_hitaddmp() {
  hitaddmp_ = 0u;
  clear_has_hitaddmp();
}
inline ::google::protobuf::uint32 AttributeList::hitaddmp() const {
  return hitaddmp_;
}
inline void AttributeList::set_hitaddmp(::google::protobuf::uint32 value) {
  set_has_hitaddmp();
  hitaddmp_ = value;
}

// optional uint32 beAttackAddMP = 35;
inline bool AttributeList::has_beattackaddmp() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void AttributeList::set_has_beattackaddmp() {
  _has_bits_[1] |= 0x00000004u;
}
inline void AttributeList::clear_has_beattackaddmp() {
  _has_bits_[1] &= ~0x00000004u;
}
inline void AttributeList::clear_beattackaddmp() {
  beattackaddmp_ = 0u;
  clear_has_beattackaddmp();
}
inline ::google::protobuf::uint32 AttributeList::beattackaddmp() const {
  return beattackaddmp_;
}
inline void AttributeList::set_beattackaddmp(::google::protobuf::uint32 value) {
  set_has_beattackaddmp();
  beattackaddmp_ = value;
}

// optional uint32 addMoveSpeed = 36;
inline bool AttributeList::has_addmovespeed() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void AttributeList::set_has_addmovespeed() {
  _has_bits_[1] |= 0x00000008u;
}
inline void AttributeList::clear_has_addmovespeed() {
  _has_bits_[1] &= ~0x00000008u;
}
inline void AttributeList::clear_addmovespeed() {
  addmovespeed_ = 0u;
  clear_has_addmovespeed();
}
inline ::google::protobuf::uint32 AttributeList::addmovespeed() const {
  return addmovespeed_;
}
inline void AttributeList::set_addmovespeed(::google::protobuf::uint32 value) {
  set_has_addmovespeed();
  addmovespeed_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace item
}  // namespace protocol

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_protocol_2fProto_2fEquipAttribute_2eproto__INCLUDED
