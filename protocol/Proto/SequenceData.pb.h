// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protocol/Proto/SequenceData.proto

#ifndef PROTOBUF_protocol_2fProto_2fSequenceData_2eproto__INCLUDED
#define PROTOBUF_protocol_2fProto_2fSequenceData_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protocol {
namespace serialize {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_protocol_2fProto_2fSequenceData_2eproto();
void protobuf_AssignDesc_protocol_2fProto_2fSequenceData_2eproto();
void protobuf_ShutdownFile_protocol_2fProto_2fSequenceData_2eproto();

class UserSequenceData;
class UserSequenceData_SequenceValue;

// ===================================================================

class UserSequenceData_SequenceValue : public ::google::protobuf::Message {
 public:
  UserSequenceData_SequenceValue();
  virtual ~UserSequenceData_SequenceValue();

  UserSequenceData_SequenceValue(const UserSequenceData_SequenceValue& from);

  inline UserSequenceData_SequenceValue& operator=(const UserSequenceData_SequenceValue& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserSequenceData_SequenceValue& default_instance();

  void Swap(UserSequenceData_SequenceValue* other);

  // implements Message ----------------------------------------------

  UserSequenceData_SequenceValue* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserSequenceData_SequenceValue& from);
  void MergeFrom(const UserSequenceData_SequenceValue& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 charID = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharIDFieldNumber = 1;
  inline ::google::protobuf::uint32 charid() const;
  inline void set_charid(::google::protobuf::uint32 value);

  // optional uint32 seqData = 2;
  inline bool has_seqdata() const;
  inline void clear_seqdata();
  static const int kSeqDataFieldNumber = 2;
  inline ::google::protobuf::uint32 seqdata() const;
  inline void set_seqdata(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protocol.serialize.UserSequenceData.SequenceValue)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_seqdata();
  inline void clear_has_seqdata();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 charid_;
  ::google::protobuf::uint32 seqdata_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_protocol_2fProto_2fSequenceData_2eproto();
  friend void protobuf_AssignDesc_protocol_2fProto_2fSequenceData_2eproto();
  friend void protobuf_ShutdownFile_protocol_2fProto_2fSequenceData_2eproto();

  void InitAsDefaultInstance();
  static UserSequenceData_SequenceValue* default_instance_;
};
// -------------------------------------------------------------------

class UserSequenceData : public ::google::protobuf::Message {
 public:
  UserSequenceData();
  virtual ~UserSequenceData();

  UserSequenceData(const UserSequenceData& from);

  inline UserSequenceData& operator=(const UserSequenceData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserSequenceData& default_instance();

  void Swap(UserSequenceData* other);

  // implements Message ----------------------------------------------

  UserSequenceData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserSequenceData& from);
  void MergeFrom(const UserSequenceData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef UserSequenceData_SequenceValue SequenceValue;

  // accessors -------------------------------------------------------

  // repeated .protocol.serialize.UserSequenceData.SequenceValue data = 1;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 1;
  inline const ::protocol::serialize::UserSequenceData_SequenceValue& data(int index) const;
  inline ::protocol::serialize::UserSequenceData_SequenceValue* mutable_data(int index);
  inline ::protocol::serialize::UserSequenceData_SequenceValue* add_data();
  inline const ::google::protobuf::RepeatedPtrField< ::protocol::serialize::UserSequenceData_SequenceValue >&
      data() const;
  inline ::google::protobuf::RepeatedPtrField< ::protocol::serialize::UserSequenceData_SequenceValue >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:protocol.serialize.UserSequenceData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::protocol::serialize::UserSequenceData_SequenceValue > data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_protocol_2fProto_2fSequenceData_2eproto();
  friend void protobuf_AssignDesc_protocol_2fProto_2fSequenceData_2eproto();
  friend void protobuf_ShutdownFile_protocol_2fProto_2fSequenceData_2eproto();

  void InitAsDefaultInstance();
  static UserSequenceData* default_instance_;
};
// ===================================================================


// ===================================================================

// UserSequenceData_SequenceValue

// required uint32 charID = 1;
inline bool UserSequenceData_SequenceValue::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserSequenceData_SequenceValue::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserSequenceData_SequenceValue::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserSequenceData_SequenceValue::clear_charid() {
  charid_ = 0u;
  clear_has_charid();
}
inline ::google::protobuf::uint32 UserSequenceData_SequenceValue::charid() const {
  return charid_;
}
inline void UserSequenceData_SequenceValue::set_charid(::google::protobuf::uint32 value) {
  set_has_charid();
  charid_ = value;
}

// optional uint32 seqData = 2;
inline bool UserSequenceData_SequenceValue::has_seqdata() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserSequenceData_SequenceValue::set_has_seqdata() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserSequenceData_SequenceValue::clear_has_seqdata() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserSequenceData_SequenceValue::clear_seqdata() {
  seqdata_ = 0u;
  clear_has_seqdata();
}
inline ::google::protobuf::uint32 UserSequenceData_SequenceValue::seqdata() const {
  return seqdata_;
}
inline void UserSequenceData_SequenceValue::set_seqdata(::google::protobuf::uint32 value) {
  set_has_seqdata();
  seqdata_ = value;
}

// -------------------------------------------------------------------

// UserSequenceData

// repeated .protocol.serialize.UserSequenceData.SequenceValue data = 1;
inline int UserSequenceData::data_size() const {
  return data_.size();
}
inline void UserSequenceData::clear_data() {
  data_.Clear();
}
inline const ::protocol::serialize::UserSequenceData_SequenceValue& UserSequenceData::data(int index) const {
  return data_.Get(index);
}
inline ::protocol::serialize::UserSequenceData_SequenceValue* UserSequenceData::mutable_data(int index) {
  return data_.Mutable(index);
}
inline ::protocol::serialize::UserSequenceData_SequenceValue* UserSequenceData::add_data() {
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::serialize::UserSequenceData_SequenceValue >&
UserSequenceData::data() const {
  return data_;
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::serialize::UserSequenceData_SequenceValue >*
UserSequenceData::mutable_data() {
  return &data_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace serialize
}  // namespace protocol

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_protocol_2fProto_2fSequenceData_2eproto__INCLUDED
