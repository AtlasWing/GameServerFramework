// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protocol/Proto/ItemData.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "protocol/Proto/ItemData.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace protocol {
namespace item {

namespace {

const ::google::protobuf::Descriptor* ItemBinary_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ItemBinary_reflection_ = NULL;
const ::google::protobuf::Descriptor* ItemAttribute_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ItemAttribute_reflection_ = NULL;
const ::google::protobuf::Descriptor* UseItemData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UseItemData_reflection_ = NULL;
const ::google::protobuf::Descriptor* MysteryShopData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MysteryShopData_reflection_ = NULL;
const ::google::protobuf::Descriptor* ClubShopData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClubShopData_reflection_ = NULL;
const ::google::protobuf::Descriptor* MysteryShopBinary_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MysteryShopBinary_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_protocol_2fProto_2fItemData_2eproto() {
  protobuf_AddDesc_protocol_2fProto_2fItemData_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "protocol/Proto/ItemData.proto");
  GOOGLE_CHECK(file != NULL);
  ItemBinary_descriptor_ = file->message_type(0);
  static const int ItemBinary_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemBinary, globalid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemBinary, baseid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemBinary, location_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemBinary, attr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemBinary, equipattr_),
  };
  ItemBinary_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ItemBinary_descriptor_,
      ItemBinary::default_instance_,
      ItemBinary_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemBinary, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemBinary, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ItemBinary));
  ItemAttribute_descriptor_ = file->message_type(1);
  static const int ItemAttribute_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemAttribute, num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemAttribute, bind_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemAttribute, quality_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemAttribute, grade_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemAttribute, identify_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemAttribute, received_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemAttribute, used_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemAttribute, viewed_),
  };
  ItemAttribute_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ItemAttribute_descriptor_,
      ItemAttribute::default_instance_,
      ItemAttribute_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemAttribute, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ItemAttribute, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ItemAttribute));
  UseItemData_descriptor_ = file->message_type(2);
  static const int UseItemData_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseItemData, destusername_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseItemData, destuserid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseItemData, destuseronline_),
  };
  UseItemData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UseItemData_descriptor_,
      UseItemData::default_instance_,
      UseItemData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseItemData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseItemData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UseItemData));
  MysteryShopData_descriptor_ = file->message_type(3);
  static const int MysteryShopData_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MysteryShopData, gridid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MysteryShopData, itembaseid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MysteryShopData, num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MysteryShopData, bindtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MysteryShopData, quality_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MysteryShopData, identify_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MysteryShopData, moneytype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MysteryShopData, money_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MysteryShopData, isdiscount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MysteryShopData, issell_),
  };
  MysteryShopData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MysteryShopData_descriptor_,
      MysteryShopData::default_instance_,
      MysteryShopData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MysteryShopData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MysteryShopData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MysteryShopData));
  ClubShopData_descriptor_ = file->message_type(4);
  static const int ClubShopData_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubShopData, gridid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubShopData, itembaseid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubShopData, num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubShopData, moneytype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubShopData, money_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubShopData, issell_),
  };
  ClubShopData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ClubShopData_descriptor_,
      ClubShopData::default_instance_,
      ClubShopData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubShopData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClubShopData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ClubShopData));
  MysteryShopBinary_descriptor_ = file->message_type(5);
  static const int MysteryShopBinary_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MysteryShopBinary, shopdata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MysteryShopBinary, lastfreshtimeinsec_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MysteryShopBinary, todayfreshmysteryshoptimes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MysteryShopBinary, clubshopdata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MysteryShopBinary, todayfreshclubshoptimes_),
  };
  MysteryShopBinary_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MysteryShopBinary_descriptor_,
      MysteryShopBinary::default_instance_,
      MysteryShopBinary_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MysteryShopBinary, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MysteryShopBinary, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MysteryShopBinary));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_protocol_2fProto_2fItemData_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ItemBinary_descriptor_, &ItemBinary::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ItemAttribute_descriptor_, &ItemAttribute::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UseItemData_descriptor_, &UseItemData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MysteryShopData_descriptor_, &MysteryShopData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ClubShopData_descriptor_, &ClubShopData::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MysteryShopBinary_descriptor_, &MysteryShopBinary::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_protocol_2fProto_2fItemData_2eproto() {
  delete ItemBinary::default_instance_;
  delete ItemBinary_reflection_;
  delete ItemAttribute::default_instance_;
  delete ItemAttribute_reflection_;
  delete UseItemData::default_instance_;
  delete UseItemData_reflection_;
  delete MysteryShopData::default_instance_;
  delete MysteryShopData_reflection_;
  delete ClubShopData::default_instance_;
  delete ClubShopData_reflection_;
  delete MysteryShopBinary::default_instance_;
  delete MysteryShopBinary_reflection_;
}

void protobuf_AddDesc_protocol_2fProto_2fItemData_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protocol::item::protobuf_AddDesc_protocol_2fProto_2fEquipAttribute_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\035protocol/Proto/ItemData.proto\022\rprotoco"
    "l.item\032#protocol/Proto/EquipAttribute.pr"
    "oto\"\236\001\n\nItemBinary\022\020\n\010globalID\030\001 \002(\004\022\016\n\006"
    "baseID\030\002 \002(\r\022\020\n\010location\030\003 \002(\r\022*\n\004attr\030\004"
    " \002(\0132\034.protocol.item.ItemAttribute\0220\n\teq"
    "uipAttr\030\005 \002(\0132\035.protocol.item.EquipAttri"
    "bute\"\214\001\n\rItemAttribute\022\013\n\003num\030\001 \002(\r\022\014\n\004b"
    "ind\030\002 \001(\010\022\017\n\007quality\030\003 \001(\r\022\r\n\005grade\030\004 \001("
    "\r\022\020\n\010identify\030\005 \001(\r\022\020\n\010received\030\006 \001(\010\022\014\n"
    "\004used\030\007 \001(\010\022\016\n\006viewed\030\010 \001(\010\"O\n\013UseItemDa"
    "ta\022\024\n\014destUserName\030\001 \001(\t\022\022\n\ndestUserID\030\002"
    " \001(\r\022\026\n\016destUserOnline\030\003 \001(\010\"\275\001\n\017Mystery"
    "ShopData\022\016\n\006gridID\030\001 \002(\r\022\022\n\nitemBaseID\030\002"
    " \002(\r\022\013\n\003num\030\003 \002(\r\022\020\n\010bindType\030\004 \002(\010\022\017\n\007q"
    "uality\030\005 \002(\r\022\020\n\010identify\030\006 \002(\r\022\021\n\tmoneyT"
    "ype\030\007 \002(\r\022\r\n\005money\030\010 \002(\r\022\022\n\nisDiscount\030\t"
    " \002(\010\022\016\n\006isSell\030\n \002(\010\"q\n\014ClubShopData\022\016\n\006"
    "gridID\030\001 \002(\r\022\022\n\nitemBaseID\030\002 \002(\r\022\013\n\003num\030"
    "\003 \002(\r\022\021\n\tmoneyType\030\004 \002(\r\022\r\n\005money\030\005 \002(\r\022"
    "\016\n\006isSell\030\006 \002(\010\"\331\001\n\021MysteryShopBinary\0220\n"
    "\010shopData\030\001 \003(\0132\036.protocol.item.MysteryS"
    "hopData\022\032\n\022lastFreshTimeInSec\030\002 \002(\r\022\"\n\032t"
    "odayFreshMysteryShopTimes\030\003 \002(\r\0221\n\014clubS"
    "hopData\030\004 \003(\0132\033.protocol.item.ClubShopDa"
    "ta\022\037\n\027todayFreshClubShopTimes\030\005 \002(\r", 995);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "protocol/Proto/ItemData.proto", &protobuf_RegisterTypes);
  ItemBinary::default_instance_ = new ItemBinary();
  ItemAttribute::default_instance_ = new ItemAttribute();
  UseItemData::default_instance_ = new UseItemData();
  MysteryShopData::default_instance_ = new MysteryShopData();
  ClubShopData::default_instance_ = new ClubShopData();
  MysteryShopBinary::default_instance_ = new MysteryShopBinary();
  ItemBinary::default_instance_->InitAsDefaultInstance();
  ItemAttribute::default_instance_->InitAsDefaultInstance();
  UseItemData::default_instance_->InitAsDefaultInstance();
  MysteryShopData::default_instance_->InitAsDefaultInstance();
  ClubShopData::default_instance_->InitAsDefaultInstance();
  MysteryShopBinary::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_protocol_2fProto_2fItemData_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_protocol_2fProto_2fItemData_2eproto {
  StaticDescriptorInitializer_protocol_2fProto_2fItemData_2eproto() {
    protobuf_AddDesc_protocol_2fProto_2fItemData_2eproto();
  }
} static_descriptor_initializer_protocol_2fProto_2fItemData_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int ItemBinary::kGlobalIDFieldNumber;
const int ItemBinary::kBaseIDFieldNumber;
const int ItemBinary::kLocationFieldNumber;
const int ItemBinary::kAttrFieldNumber;
const int ItemBinary::kEquipAttrFieldNumber;
#endif  // !_MSC_VER

ItemBinary::ItemBinary()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ItemBinary::InitAsDefaultInstance() {
  attr_ = const_cast< ::protocol::item::ItemAttribute*>(&::protocol::item::ItemAttribute::default_instance());
  equipattr_ = const_cast< ::protocol::item::EquipAttribute*>(&::protocol::item::EquipAttribute::default_instance());
}

ItemBinary::ItemBinary(const ItemBinary& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ItemBinary::SharedCtor() {
  _cached_size_ = 0;
  globalid_ = GOOGLE_ULONGLONG(0);
  baseid_ = 0u;
  location_ = 0u;
  attr_ = NULL;
  equipattr_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ItemBinary::~ItemBinary() {
  SharedDtor();
}

void ItemBinary::SharedDtor() {
  if (this != default_instance_) {
    delete attr_;
    delete equipattr_;
  }
}

void ItemBinary::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemBinary::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ItemBinary_descriptor_;
}

const ItemBinary& ItemBinary::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2fProto_2fItemData_2eproto();
  return *default_instance_;
}

ItemBinary* ItemBinary::default_instance_ = NULL;

ItemBinary* ItemBinary::New() const {
  return new ItemBinary;
}

void ItemBinary::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    globalid_ = GOOGLE_ULONGLONG(0);
    baseid_ = 0u;
    location_ = 0u;
    if (has_attr()) {
      if (attr_ != NULL) attr_->::protocol::item::ItemAttribute::Clear();
    }
    if (has_equipattr()) {
      if (equipattr_ != NULL) equipattr_->::protocol::item::EquipAttribute::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ItemBinary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 globalID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &globalid_)));
          set_has_globalid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_baseID;
        break;
      }

      // required uint32 baseID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_baseID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &baseid_)));
          set_has_baseid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_location;
        break;
      }

      // required uint32 location = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_location:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &location_)));
          set_has_location();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_attr;
        break;
      }

      // required .protocol.item.ItemAttribute attr = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_attr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_attr()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_equipAttr;
        break;
      }

      // required .protocol.item.EquipAttribute equipAttr = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_equipAttr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_equipattr()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ItemBinary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint64 globalID = 1;
  if (has_globalid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->globalid(), output);
  }

  // required uint32 baseID = 2;
  if (has_baseid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->baseid(), output);
  }

  // required uint32 location = 3;
  if (has_location()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->location(), output);
  }

  // required .protocol.item.ItemAttribute attr = 4;
  if (has_attr()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->attr(), output);
  }

  // required .protocol.item.EquipAttribute equipAttr = 5;
  if (has_equipattr()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->equipattr(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ItemBinary::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint64 globalID = 1;
  if (has_globalid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->globalid(), target);
  }

  // required uint32 baseID = 2;
  if (has_baseid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->baseid(), target);
  }

  // required uint32 location = 3;
  if (has_location()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->location(), target);
  }

  // required .protocol.item.ItemAttribute attr = 4;
  if (has_attr()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->attr(), target);
  }

  // required .protocol.item.EquipAttribute equipAttr = 5;
  if (has_equipattr()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->equipattr(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ItemBinary::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint64 globalID = 1;
    if (has_globalid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->globalid());
    }

    // required uint32 baseID = 2;
    if (has_baseid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->baseid());
    }

    // required uint32 location = 3;
    if (has_location()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->location());
    }

    // required .protocol.item.ItemAttribute attr = 4;
    if (has_attr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->attr());
    }

    // required .protocol.item.EquipAttribute equipAttr = 5;
    if (has_equipattr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->equipattr());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemBinary::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ItemBinary* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ItemBinary*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ItemBinary::MergeFrom(const ItemBinary& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_globalid()) {
      set_globalid(from.globalid());
    }
    if (from.has_baseid()) {
      set_baseid(from.baseid());
    }
    if (from.has_location()) {
      set_location(from.location());
    }
    if (from.has_attr()) {
      mutable_attr()->::protocol::item::ItemAttribute::MergeFrom(from.attr());
    }
    if (from.has_equipattr()) {
      mutable_equipattr()->::protocol::item::EquipAttribute::MergeFrom(from.equipattr());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ItemBinary::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemBinary::CopyFrom(const ItemBinary& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemBinary::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;

  if (has_attr()) {
    if (!this->attr().IsInitialized()) return false;
  }
  if (has_equipattr()) {
    if (!this->equipattr().IsInitialized()) return false;
  }
  return true;
}

void ItemBinary::Swap(ItemBinary* other) {
  if (other != this) {
    std::swap(globalid_, other->globalid_);
    std::swap(baseid_, other->baseid_);
    std::swap(location_, other->location_);
    std::swap(attr_, other->attr_);
    std::swap(equipattr_, other->equipattr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ItemBinary::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ItemBinary_descriptor_;
  metadata.reflection = ItemBinary_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ItemAttribute::kNumFieldNumber;
const int ItemAttribute::kBindFieldNumber;
const int ItemAttribute::kQualityFieldNumber;
const int ItemAttribute::kGradeFieldNumber;
const int ItemAttribute::kIdentifyFieldNumber;
const int ItemAttribute::kReceivedFieldNumber;
const int ItemAttribute::kUsedFieldNumber;
const int ItemAttribute::kViewedFieldNumber;
#endif  // !_MSC_VER

ItemAttribute::ItemAttribute()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ItemAttribute::InitAsDefaultInstance() {
}

ItemAttribute::ItemAttribute(const ItemAttribute& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ItemAttribute::SharedCtor() {
  _cached_size_ = 0;
  num_ = 0u;
  bind_ = false;
  quality_ = 0u;
  grade_ = 0u;
  identify_ = 0u;
  received_ = false;
  used_ = false;
  viewed_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ItemAttribute::~ItemAttribute() {
  SharedDtor();
}

void ItemAttribute::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ItemAttribute::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemAttribute::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ItemAttribute_descriptor_;
}

const ItemAttribute& ItemAttribute::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2fProto_2fItemData_2eproto();
  return *default_instance_;
}

ItemAttribute* ItemAttribute::default_instance_ = NULL;

ItemAttribute* ItemAttribute::New() const {
  return new ItemAttribute;
}

void ItemAttribute::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    num_ = 0u;
    bind_ = false;
    quality_ = 0u;
    grade_ = 0u;
    identify_ = 0u;
    received_ = false;
    used_ = false;
    viewed_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ItemAttribute::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 num = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_bind;
        break;
      }

      // optional bool bind = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_bind:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bind_)));
          set_has_bind();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_quality;
        break;
      }

      // optional uint32 quality = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_quality:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &quality_)));
          set_has_quality();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_grade;
        break;
      }

      // optional uint32 grade = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_grade:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &grade_)));
          set_has_grade();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_identify;
        break;
      }

      // optional uint32 identify = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_identify:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &identify_)));
          set_has_identify();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_received;
        break;
      }

      // optional bool received = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_received:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &received_)));
          set_has_received();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_used;
        break;
      }

      // optional bool used = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_used:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &used_)));
          set_has_used();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_viewed;
        break;
      }

      // optional bool viewed = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_viewed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &viewed_)));
          set_has_viewed();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ItemAttribute::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 num = 1;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->num(), output);
  }

  // optional bool bind = 2;
  if (has_bind()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->bind(), output);
  }

  // optional uint32 quality = 3;
  if (has_quality()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->quality(), output);
  }

  // optional uint32 grade = 4;
  if (has_grade()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->grade(), output);
  }

  // optional uint32 identify = 5;
  if (has_identify()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->identify(), output);
  }

  // optional bool received = 6;
  if (has_received()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->received(), output);
  }

  // optional bool used = 7;
  if (has_used()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->used(), output);
  }

  // optional bool viewed = 8;
  if (has_viewed()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->viewed(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ItemAttribute::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 num = 1;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->num(), target);
  }

  // optional bool bind = 2;
  if (has_bind()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->bind(), target);
  }

  // optional uint32 quality = 3;
  if (has_quality()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->quality(), target);
  }

  // optional uint32 grade = 4;
  if (has_grade()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->grade(), target);
  }

  // optional uint32 identify = 5;
  if (has_identify()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->identify(), target);
  }

  // optional bool received = 6;
  if (has_received()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->received(), target);
  }

  // optional bool used = 7;
  if (has_used()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->used(), target);
  }

  // optional bool viewed = 8;
  if (has_viewed()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->viewed(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ItemAttribute::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 num = 1;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num());
    }

    // optional bool bind = 2;
    if (has_bind()) {
      total_size += 1 + 1;
    }

    // optional uint32 quality = 3;
    if (has_quality()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->quality());
    }

    // optional uint32 grade = 4;
    if (has_grade()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->grade());
    }

    // optional uint32 identify = 5;
    if (has_identify()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->identify());
    }

    // optional bool received = 6;
    if (has_received()) {
      total_size += 1 + 1;
    }

    // optional bool used = 7;
    if (has_used()) {
      total_size += 1 + 1;
    }

    // optional bool viewed = 8;
    if (has_viewed()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemAttribute::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ItemAttribute* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ItemAttribute*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ItemAttribute::MergeFrom(const ItemAttribute& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_num()) {
      set_num(from.num());
    }
    if (from.has_bind()) {
      set_bind(from.bind());
    }
    if (from.has_quality()) {
      set_quality(from.quality());
    }
    if (from.has_grade()) {
      set_grade(from.grade());
    }
    if (from.has_identify()) {
      set_identify(from.identify());
    }
    if (from.has_received()) {
      set_received(from.received());
    }
    if (from.has_used()) {
      set_used(from.used());
    }
    if (from.has_viewed()) {
      set_viewed(from.viewed());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ItemAttribute::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemAttribute::CopyFrom(const ItemAttribute& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemAttribute::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ItemAttribute::Swap(ItemAttribute* other) {
  if (other != this) {
    std::swap(num_, other->num_);
    std::swap(bind_, other->bind_);
    std::swap(quality_, other->quality_);
    std::swap(grade_, other->grade_);
    std::swap(identify_, other->identify_);
    std::swap(received_, other->received_);
    std::swap(used_, other->used_);
    std::swap(viewed_, other->viewed_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ItemAttribute::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ItemAttribute_descriptor_;
  metadata.reflection = ItemAttribute_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UseItemData::kDestUserNameFieldNumber;
const int UseItemData::kDestUserIDFieldNumber;
const int UseItemData::kDestUserOnlineFieldNumber;
#endif  // !_MSC_VER

UseItemData::UseItemData()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void UseItemData::InitAsDefaultInstance() {
}

UseItemData::UseItemData(const UseItemData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void UseItemData::SharedCtor() {
  _cached_size_ = 0;
  destusername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  destuserid_ = 0u;
  destuseronline_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UseItemData::~UseItemData() {
  SharedDtor();
}

void UseItemData::SharedDtor() {
  if (destusername_ != &::google::protobuf::internal::kEmptyString) {
    delete destusername_;
  }
  if (this != default_instance_) {
  }
}

void UseItemData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UseItemData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UseItemData_descriptor_;
}

const UseItemData& UseItemData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2fProto_2fItemData_2eproto();
  return *default_instance_;
}

UseItemData* UseItemData::default_instance_ = NULL;

UseItemData* UseItemData::New() const {
  return new UseItemData;
}

void UseItemData::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_destusername()) {
      if (destusername_ != &::google::protobuf::internal::kEmptyString) {
        destusername_->clear();
      }
    }
    destuserid_ = 0u;
    destuseronline_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UseItemData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string destUserName = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_destusername()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->destusername().data(), this->destusername().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_destUserID;
        break;
      }

      // optional uint32 destUserID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_destUserID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &destuserid_)));
          set_has_destuserid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_destUserOnline;
        break;
      }

      // optional bool destUserOnline = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_destUserOnline:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &destuseronline_)));
          set_has_destuseronline();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void UseItemData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string destUserName = 1;
  if (has_destusername()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->destusername().data(), this->destusername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->destusername(), output);
  }

  // optional uint32 destUserID = 2;
  if (has_destuserid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->destuserid(), output);
  }

  // optional bool destUserOnline = 3;
  if (has_destuseronline()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->destuseronline(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* UseItemData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string destUserName = 1;
  if (has_destusername()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->destusername().data(), this->destusername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->destusername(), target);
  }

  // optional uint32 destUserID = 2;
  if (has_destuserid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->destuserid(), target);
  }

  // optional bool destUserOnline = 3;
  if (has_destuseronline()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->destuseronline(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int UseItemData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string destUserName = 1;
    if (has_destusername()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->destusername());
    }

    // optional uint32 destUserID = 2;
    if (has_destuserid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->destuserid());
    }

    // optional bool destUserOnline = 3;
    if (has_destuseronline()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UseItemData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UseItemData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UseItemData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UseItemData::MergeFrom(const UseItemData& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_destusername()) {
      set_destusername(from.destusername());
    }
    if (from.has_destuserid()) {
      set_destuserid(from.destuserid());
    }
    if (from.has_destuseronline()) {
      set_destuseronline(from.destuseronline());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UseItemData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UseItemData::CopyFrom(const UseItemData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UseItemData::IsInitialized() const {

  return true;
}

void UseItemData::Swap(UseItemData* other) {
  if (other != this) {
    std::swap(destusername_, other->destusername_);
    std::swap(destuserid_, other->destuserid_);
    std::swap(destuseronline_, other->destuseronline_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UseItemData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UseItemData_descriptor_;
  metadata.reflection = UseItemData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MysteryShopData::kGridIDFieldNumber;
const int MysteryShopData::kItemBaseIDFieldNumber;
const int MysteryShopData::kNumFieldNumber;
const int MysteryShopData::kBindTypeFieldNumber;
const int MysteryShopData::kQualityFieldNumber;
const int MysteryShopData::kIdentifyFieldNumber;
const int MysteryShopData::kMoneyTypeFieldNumber;
const int MysteryShopData::kMoneyFieldNumber;
const int MysteryShopData::kIsDiscountFieldNumber;
const int MysteryShopData::kIsSellFieldNumber;
#endif  // !_MSC_VER

MysteryShopData::MysteryShopData()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MysteryShopData::InitAsDefaultInstance() {
}

MysteryShopData::MysteryShopData(const MysteryShopData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MysteryShopData::SharedCtor() {
  _cached_size_ = 0;
  gridid_ = 0u;
  itembaseid_ = 0u;
  num_ = 0u;
  bindtype_ = false;
  quality_ = 0u;
  identify_ = 0u;
  moneytype_ = 0u;
  money_ = 0u;
  isdiscount_ = false;
  issell_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MysteryShopData::~MysteryShopData() {
  SharedDtor();
}

void MysteryShopData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MysteryShopData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MysteryShopData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MysteryShopData_descriptor_;
}

const MysteryShopData& MysteryShopData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2fProto_2fItemData_2eproto();
  return *default_instance_;
}

MysteryShopData* MysteryShopData::default_instance_ = NULL;

MysteryShopData* MysteryShopData::New() const {
  return new MysteryShopData;
}

void MysteryShopData::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    gridid_ = 0u;
    itembaseid_ = 0u;
    num_ = 0u;
    bindtype_ = false;
    quality_ = 0u;
    identify_ = 0u;
    moneytype_ = 0u;
    money_ = 0u;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    isdiscount_ = false;
    issell_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MysteryShopData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 gridID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gridid_)));
          set_has_gridid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_itemBaseID;
        break;
      }

      // required uint32 itemBaseID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_itemBaseID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itembaseid_)));
          set_has_itembaseid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_num;
        break;
      }

      // required uint32 num = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_bindType;
        break;
      }

      // required bool bindType = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_bindType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bindtype_)));
          set_has_bindtype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_quality;
        break;
      }

      // required uint32 quality = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_quality:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &quality_)));
          set_has_quality();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_identify;
        break;
      }

      // required uint32 identify = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_identify:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &identify_)));
          set_has_identify();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_moneyType;
        break;
      }

      // required uint32 moneyType = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_moneyType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &moneytype_)));
          set_has_moneytype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_money;
        break;
      }

      // required uint32 money = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_money:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &money_)));
          set_has_money();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_isDiscount;
        break;
      }

      // required bool isDiscount = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_isDiscount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isdiscount_)));
          set_has_isdiscount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_isSell;
        break;
      }

      // required bool isSell = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_isSell:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &issell_)));
          set_has_issell();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MysteryShopData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 gridID = 1;
  if (has_gridid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->gridid(), output);
  }

  // required uint32 itemBaseID = 2;
  if (has_itembaseid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->itembaseid(), output);
  }

  // required uint32 num = 3;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->num(), output);
  }

  // required bool bindType = 4;
  if (has_bindtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->bindtype(), output);
  }

  // required uint32 quality = 5;
  if (has_quality()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->quality(), output);
  }

  // required uint32 identify = 6;
  if (has_identify()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->identify(), output);
  }

  // required uint32 moneyType = 7;
  if (has_moneytype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->moneytype(), output);
  }

  // required uint32 money = 8;
  if (has_money()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->money(), output);
  }

  // required bool isDiscount = 9;
  if (has_isdiscount()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->isdiscount(), output);
  }

  // required bool isSell = 10;
  if (has_issell()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->issell(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MysteryShopData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 gridID = 1;
  if (has_gridid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->gridid(), target);
  }

  // required uint32 itemBaseID = 2;
  if (has_itembaseid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->itembaseid(), target);
  }

  // required uint32 num = 3;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->num(), target);
  }

  // required bool bindType = 4;
  if (has_bindtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->bindtype(), target);
  }

  // required uint32 quality = 5;
  if (has_quality()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->quality(), target);
  }

  // required uint32 identify = 6;
  if (has_identify()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->identify(), target);
  }

  // required uint32 moneyType = 7;
  if (has_moneytype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->moneytype(), target);
  }

  // required uint32 money = 8;
  if (has_money()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->money(), target);
  }

  // required bool isDiscount = 9;
  if (has_isdiscount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->isdiscount(), target);
  }

  // required bool isSell = 10;
  if (has_issell()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->issell(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MysteryShopData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 gridID = 1;
    if (has_gridid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gridid());
    }

    // required uint32 itemBaseID = 2;
    if (has_itembaseid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->itembaseid());
    }

    // required uint32 num = 3;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num());
    }

    // required bool bindType = 4;
    if (has_bindtype()) {
      total_size += 1 + 1;
    }

    // required uint32 quality = 5;
    if (has_quality()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->quality());
    }

    // required uint32 identify = 6;
    if (has_identify()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->identify());
    }

    // required uint32 moneyType = 7;
    if (has_moneytype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->moneytype());
    }

    // required uint32 money = 8;
    if (has_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->money());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required bool isDiscount = 9;
    if (has_isdiscount()) {
      total_size += 1 + 1;
    }

    // required bool isSell = 10;
    if (has_issell()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MysteryShopData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MysteryShopData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MysteryShopData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MysteryShopData::MergeFrom(const MysteryShopData& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_gridid()) {
      set_gridid(from.gridid());
    }
    if (from.has_itembaseid()) {
      set_itembaseid(from.itembaseid());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
    if (from.has_bindtype()) {
      set_bindtype(from.bindtype());
    }
    if (from.has_quality()) {
      set_quality(from.quality());
    }
    if (from.has_identify()) {
      set_identify(from.identify());
    }
    if (from.has_moneytype()) {
      set_moneytype(from.moneytype());
    }
    if (from.has_money()) {
      set_money(from.money());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_isdiscount()) {
      set_isdiscount(from.isdiscount());
    }
    if (from.has_issell()) {
      set_issell(from.issell());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MysteryShopData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MysteryShopData::CopyFrom(const MysteryShopData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MysteryShopData::IsInitialized() const {
  if ((_has_bits_[0] & 0x000003ff) != 0x000003ff) return false;

  return true;
}

void MysteryShopData::Swap(MysteryShopData* other) {
  if (other != this) {
    std::swap(gridid_, other->gridid_);
    std::swap(itembaseid_, other->itembaseid_);
    std::swap(num_, other->num_);
    std::swap(bindtype_, other->bindtype_);
    std::swap(quality_, other->quality_);
    std::swap(identify_, other->identify_);
    std::swap(moneytype_, other->moneytype_);
    std::swap(money_, other->money_);
    std::swap(isdiscount_, other->isdiscount_);
    std::swap(issell_, other->issell_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MysteryShopData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MysteryShopData_descriptor_;
  metadata.reflection = MysteryShopData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ClubShopData::kGridIDFieldNumber;
const int ClubShopData::kItemBaseIDFieldNumber;
const int ClubShopData::kNumFieldNumber;
const int ClubShopData::kMoneyTypeFieldNumber;
const int ClubShopData::kMoneyFieldNumber;
const int ClubShopData::kIsSellFieldNumber;
#endif  // !_MSC_VER

ClubShopData::ClubShopData()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ClubShopData::InitAsDefaultInstance() {
}

ClubShopData::ClubShopData(const ClubShopData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ClubShopData::SharedCtor() {
  _cached_size_ = 0;
  gridid_ = 0u;
  itembaseid_ = 0u;
  num_ = 0u;
  moneytype_ = 0u;
  money_ = 0u;
  issell_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ClubShopData::~ClubShopData() {
  SharedDtor();
}

void ClubShopData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ClubShopData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClubShopData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClubShopData_descriptor_;
}

const ClubShopData& ClubShopData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2fProto_2fItemData_2eproto();
  return *default_instance_;
}

ClubShopData* ClubShopData::default_instance_ = NULL;

ClubShopData* ClubShopData::New() const {
  return new ClubShopData;
}

void ClubShopData::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    gridid_ = 0u;
    itembaseid_ = 0u;
    num_ = 0u;
    moneytype_ = 0u;
    money_ = 0u;
    issell_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ClubShopData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 gridID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gridid_)));
          set_has_gridid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_itemBaseID;
        break;
      }

      // required uint32 itemBaseID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_itemBaseID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itembaseid_)));
          set_has_itembaseid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_num;
        break;
      }

      // required uint32 num = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_num:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
          set_has_num();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_moneyType;
        break;
      }

      // required uint32 moneyType = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_moneyType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &moneytype_)));
          set_has_moneytype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_money;
        break;
      }

      // required uint32 money = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_money:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &money_)));
          set_has_money();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_isSell;
        break;
      }

      // required bool isSell = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_isSell:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &issell_)));
          set_has_issell();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ClubShopData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 gridID = 1;
  if (has_gridid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->gridid(), output);
  }

  // required uint32 itemBaseID = 2;
  if (has_itembaseid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->itembaseid(), output);
  }

  // required uint32 num = 3;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->num(), output);
  }

  // required uint32 moneyType = 4;
  if (has_moneytype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->moneytype(), output);
  }

  // required uint32 money = 5;
  if (has_money()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->money(), output);
  }

  // required bool isSell = 6;
  if (has_issell()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->issell(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ClubShopData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 gridID = 1;
  if (has_gridid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->gridid(), target);
  }

  // required uint32 itemBaseID = 2;
  if (has_itembaseid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->itembaseid(), target);
  }

  // required uint32 num = 3;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->num(), target);
  }

  // required uint32 moneyType = 4;
  if (has_moneytype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->moneytype(), target);
  }

  // required uint32 money = 5;
  if (has_money()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->money(), target);
  }

  // required bool isSell = 6;
  if (has_issell()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->issell(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ClubShopData::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 gridID = 1;
    if (has_gridid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gridid());
    }

    // required uint32 itemBaseID = 2;
    if (has_itembaseid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->itembaseid());
    }

    // required uint32 num = 3;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num());
    }

    // required uint32 moneyType = 4;
    if (has_moneytype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->moneytype());
    }

    // required uint32 money = 5;
    if (has_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->money());
    }

    // required bool isSell = 6;
    if (has_issell()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClubShopData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ClubShopData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ClubShopData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ClubShopData::MergeFrom(const ClubShopData& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_gridid()) {
      set_gridid(from.gridid());
    }
    if (from.has_itembaseid()) {
      set_itembaseid(from.itembaseid());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
    if (from.has_moneytype()) {
      set_moneytype(from.moneytype());
    }
    if (from.has_money()) {
      set_money(from.money());
    }
    if (from.has_issell()) {
      set_issell(from.issell());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ClubShopData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClubShopData::CopyFrom(const ClubShopData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClubShopData::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;

  return true;
}

void ClubShopData::Swap(ClubShopData* other) {
  if (other != this) {
    std::swap(gridid_, other->gridid_);
    std::swap(itembaseid_, other->itembaseid_);
    std::swap(num_, other->num_);
    std::swap(moneytype_, other->moneytype_);
    std::swap(money_, other->money_);
    std::swap(issell_, other->issell_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ClubShopData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClubShopData_descriptor_;
  metadata.reflection = ClubShopData_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MysteryShopBinary::kShopDataFieldNumber;
const int MysteryShopBinary::kLastFreshTimeInSecFieldNumber;
const int MysteryShopBinary::kTodayFreshMysteryShopTimesFieldNumber;
const int MysteryShopBinary::kClubShopDataFieldNumber;
const int MysteryShopBinary::kTodayFreshClubShopTimesFieldNumber;
#endif  // !_MSC_VER

MysteryShopBinary::MysteryShopBinary()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MysteryShopBinary::InitAsDefaultInstance() {
}

MysteryShopBinary::MysteryShopBinary(const MysteryShopBinary& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MysteryShopBinary::SharedCtor() {
  _cached_size_ = 0;
  lastfreshtimeinsec_ = 0u;
  todayfreshmysteryshoptimes_ = 0u;
  todayfreshclubshoptimes_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MysteryShopBinary::~MysteryShopBinary() {
  SharedDtor();
}

void MysteryShopBinary::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MysteryShopBinary::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MysteryShopBinary::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MysteryShopBinary_descriptor_;
}

const MysteryShopBinary& MysteryShopBinary::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2fProto_2fItemData_2eproto();
  return *default_instance_;
}

MysteryShopBinary* MysteryShopBinary::default_instance_ = NULL;

MysteryShopBinary* MysteryShopBinary::New() const {
  return new MysteryShopBinary;
}

void MysteryShopBinary::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    lastfreshtimeinsec_ = 0u;
    todayfreshmysteryshoptimes_ = 0u;
    todayfreshclubshoptimes_ = 0u;
  }
  shopdata_.Clear();
  clubshopdata_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MysteryShopBinary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .protocol.item.MysteryShopData shopData = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_shopData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_shopdata()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_shopData;
        if (input->ExpectTag(16)) goto parse_lastFreshTimeInSec;
        break;
      }

      // required uint32 lastFreshTimeInSec = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_lastFreshTimeInSec:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lastfreshtimeinsec_)));
          set_has_lastfreshtimeinsec();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_todayFreshMysteryShopTimes;
        break;
      }

      // required uint32 todayFreshMysteryShopTimes = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_todayFreshMysteryShopTimes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &todayfreshmysteryshoptimes_)));
          set_has_todayfreshmysteryshoptimes();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_clubShopData;
        break;
      }

      // repeated .protocol.item.ClubShopData clubShopData = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_clubShopData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_clubshopdata()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_clubShopData;
        if (input->ExpectTag(40)) goto parse_todayFreshClubShopTimes;
        break;
      }

      // required uint32 todayFreshClubShopTimes = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_todayFreshClubShopTimes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &todayfreshclubshoptimes_)));
          set_has_todayfreshclubshoptimes();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MysteryShopBinary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .protocol.item.MysteryShopData shopData = 1;
  for (int i = 0; i < this->shopdata_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->shopdata(i), output);
  }

  // required uint32 lastFreshTimeInSec = 2;
  if (has_lastfreshtimeinsec()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->lastfreshtimeinsec(), output);
  }

  // required uint32 todayFreshMysteryShopTimes = 3;
  if (has_todayfreshmysteryshoptimes()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->todayfreshmysteryshoptimes(), output);
  }

  // repeated .protocol.item.ClubShopData clubShopData = 4;
  for (int i = 0; i < this->clubshopdata_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->clubshopdata(i), output);
  }

  // required uint32 todayFreshClubShopTimes = 5;
  if (has_todayfreshclubshoptimes()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->todayfreshclubshoptimes(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MysteryShopBinary::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .protocol.item.MysteryShopData shopData = 1;
  for (int i = 0; i < this->shopdata_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->shopdata(i), target);
  }

  // required uint32 lastFreshTimeInSec = 2;
  if (has_lastfreshtimeinsec()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->lastfreshtimeinsec(), target);
  }

  // required uint32 todayFreshMysteryShopTimes = 3;
  if (has_todayfreshmysteryshoptimes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->todayfreshmysteryshoptimes(), target);
  }

  // repeated .protocol.item.ClubShopData clubShopData = 4;
  for (int i = 0; i < this->clubshopdata_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->clubshopdata(i), target);
  }

  // required uint32 todayFreshClubShopTimes = 5;
  if (has_todayfreshclubshoptimes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->todayfreshclubshoptimes(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MysteryShopBinary::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // required uint32 lastFreshTimeInSec = 2;
    if (has_lastfreshtimeinsec()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->lastfreshtimeinsec());
    }

    // required uint32 todayFreshMysteryShopTimes = 3;
    if (has_todayfreshmysteryshoptimes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->todayfreshmysteryshoptimes());
    }

    // required uint32 todayFreshClubShopTimes = 5;
    if (has_todayfreshclubshoptimes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->todayfreshclubshoptimes());
    }

  }
  // repeated .protocol.item.MysteryShopData shopData = 1;
  total_size += 1 * this->shopdata_size();
  for (int i = 0; i < this->shopdata_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->shopdata(i));
  }

  // repeated .protocol.item.ClubShopData clubShopData = 4;
  total_size += 1 * this->clubshopdata_size();
  for (int i = 0; i < this->clubshopdata_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->clubshopdata(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MysteryShopBinary::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MysteryShopBinary* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MysteryShopBinary*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MysteryShopBinary::MergeFrom(const MysteryShopBinary& from) {
  GOOGLE_CHECK_NE(&from, this);
  shopdata_.MergeFrom(from.shopdata_);
  clubshopdata_.MergeFrom(from.clubshopdata_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_lastfreshtimeinsec()) {
      set_lastfreshtimeinsec(from.lastfreshtimeinsec());
    }
    if (from.has_todayfreshmysteryshoptimes()) {
      set_todayfreshmysteryshoptimes(from.todayfreshmysteryshoptimes());
    }
    if (from.has_todayfreshclubshoptimes()) {
      set_todayfreshclubshoptimes(from.todayfreshclubshoptimes());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MysteryShopBinary::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MysteryShopBinary::CopyFrom(const MysteryShopBinary& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MysteryShopBinary::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000016) != 0x00000016) return false;

  for (int i = 0; i < shopdata_size(); i++) {
    if (!this->shopdata(i).IsInitialized()) return false;
  }
  for (int i = 0; i < clubshopdata_size(); i++) {
    if (!this->clubshopdata(i).IsInitialized()) return false;
  }
  return true;
}

void MysteryShopBinary::Swap(MysteryShopBinary* other) {
  if (other != this) {
    shopdata_.Swap(&other->shopdata_);
    std::swap(lastfreshtimeinsec_, other->lastfreshtimeinsec_);
    std::swap(todayfreshmysteryshoptimes_, other->todayfreshmysteryshoptimes_);
    clubshopdata_.Swap(&other->clubshopdata_);
    std::swap(todayfreshclubshoptimes_, other->todayfreshclubshoptimes_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MysteryShopBinary::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MysteryShopBinary_descriptor_;
  metadata.reflection = MysteryShopBinary_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace item
}  // namespace protocol

// @@protoc_insertion_point(global_scope)
