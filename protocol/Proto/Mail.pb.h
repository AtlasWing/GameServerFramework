// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protocol/Proto/Mail.proto

#ifndef PROTOBUF_protocol_2fProto_2fMail_2eproto__INCLUDED
#define PROTOBUF_protocol_2fProto_2fMail_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protocol {
namespace mail {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_protocol_2fProto_2fMail_2eproto();
void protobuf_AssignDesc_protocol_2fProto_2fMail_2eproto();
void protobuf_ShutdownFile_protocol_2fProto_2fMail_2eproto();

class MailTitle;
class MailTitleList;
class AllItemData;
class MailDetail;
class MailItem;
class MoneyData;
class MoneyDataBinary;
class MoneyAndItemData;
class CreateMailData;
class SendSysMailData;

enum eSendMailGroupType {
  eSendMailGroupType_None = 0,
  eSendMailGroupType_UserList = 0,
  eSendMailGroupType_AllUser = 1,
  eSendMailGroupType_OnlineUser = 2,
  eSendMailGroupType_Max = 3
};
bool eSendMailGroupType_IsValid(int value);
const eSendMailGroupType eSendMailGroupType_MIN = eSendMailGroupType_None;
const eSendMailGroupType eSendMailGroupType_MAX = eSendMailGroupType_Max;
const int eSendMailGroupType_ARRAYSIZE = eSendMailGroupType_MAX + 1;

const ::google::protobuf::EnumDescriptor* eSendMailGroupType_descriptor();
inline const ::std::string& eSendMailGroupType_Name(eSendMailGroupType value) {
  return ::google::protobuf::internal::NameOfEnum(
    eSendMailGroupType_descriptor(), value);
}
inline bool eSendMailGroupType_Parse(
    const ::std::string& name, eSendMailGroupType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<eSendMailGroupType>(
    eSendMailGroupType_descriptor(), name, value);
}
// ===================================================================

class MailTitle : public ::google::protobuf::Message {
 public:
  MailTitle();
  virtual ~MailTitle();

  MailTitle(const MailTitle& from);

  inline MailTitle& operator=(const MailTitle& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MailTitle& default_instance();

  void Swap(MailTitle* other);

  // implements Message ----------------------------------------------

  MailTitle* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MailTitle& from);
  void MergeFrom(const MailTitle& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 createTimeInSec = 1;
  inline bool has_createtimeinsec() const;
  inline void clear_createtimeinsec();
  static const int kCreateTimeInSecFieldNumber = 1;
  inline ::google::protobuf::uint32 createtimeinsec() const;
  inline void set_createtimeinsec(::google::protobuf::uint32 value);

  // required uint32 mailType = 2;
  inline bool has_mailtype() const;
  inline void clear_mailtype();
  static const int kMailTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 mailtype() const;
  inline void set_mailtype(::google::protobuf::uint32 value);

  // required uint32 mailID = 3;
  inline bool has_mailid() const;
  inline void clear_mailid();
  static const int kMailIDFieldNumber = 3;
  inline ::google::protobuf::uint32 mailid() const;
  inline void set_mailid(::google::protobuf::uint32 value);

  // optional uint32 fromID = 4;
  inline bool has_fromid() const;
  inline void clear_fromid();
  static const int kFromIDFieldNumber = 4;
  inline ::google::protobuf::uint32 fromid() const;
  inline void set_fromid(::google::protobuf::uint32 value);

  // optional uint32 destID = 5;
  inline bool has_destid() const;
  inline void clear_destid();
  static const int kDestIDFieldNumber = 5;
  inline ::google::protobuf::uint32 destid() const;
  inline void set_destid(::google::protobuf::uint32 value);

  // required uint32 mailState = 6;
  inline bool has_mailstate() const;
  inline void clear_mailstate();
  static const int kMailStateFieldNumber = 6;
  inline ::google::protobuf::uint32 mailstate() const;
  inline void set_mailstate(::google::protobuf::uint32 value);

  // required string title = 7;
  inline bool has_title() const;
  inline void clear_title();
  static const int kTitleFieldNumber = 7;
  inline const ::std::string& title() const;
  inline void set_title(const ::std::string& value);
  inline void set_title(const char* value);
  inline void set_title(const char* value, size_t size);
  inline ::std::string* mutable_title();
  inline ::std::string* release_title();
  inline void set_allocated_title(::std::string* title);

  // optional string fromUserName = 8;
  inline bool has_fromusername() const;
  inline void clear_fromusername();
  static const int kFromUserNameFieldNumber = 8;
  inline const ::std::string& fromusername() const;
  inline void set_fromusername(const ::std::string& value);
  inline void set_fromusername(const char* value);
  inline void set_fromusername(const char* value, size_t size);
  inline ::std::string* mutable_fromusername();
  inline ::std::string* release_fromusername();
  inline void set_allocated_fromusername(::std::string* fromusername);

  // optional string destUserName = 9;
  inline bool has_destusername() const;
  inline void clear_destusername();
  static const int kDestUserNameFieldNumber = 9;
  inline const ::std::string& destusername() const;
  inline void set_destusername(const ::std::string& value);
  inline void set_destusername(const char* value);
  inline void set_destusername(const char* value, size_t size);
  inline ::std::string* mutable_destusername();
  inline ::std::string* release_destusername();
  inline void set_allocated_destusername(::std::string* destusername);

  // optional bool haveAttachment = 10;
  inline bool has_haveattachment() const;
  inline void clear_haveattachment();
  static const int kHaveAttachmentFieldNumber = 10;
  inline bool haveattachment() const;
  inline void set_haveattachment(bool value);

  // @@protoc_insertion_point(class_scope:protocol.mail.MailTitle)
 private:
  inline void set_has_createtimeinsec();
  inline void clear_has_createtimeinsec();
  inline void set_has_mailtype();
  inline void clear_has_mailtype();
  inline void set_has_mailid();
  inline void clear_has_mailid();
  inline void set_has_fromid();
  inline void clear_has_fromid();
  inline void set_has_destid();
  inline void clear_has_destid();
  inline void set_has_mailstate();
  inline void clear_has_mailstate();
  inline void set_has_title();
  inline void clear_has_title();
  inline void set_has_fromusername();
  inline void clear_has_fromusername();
  inline void set_has_destusername();
  inline void clear_has_destusername();
  inline void set_has_haveattachment();
  inline void clear_has_haveattachment();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 createtimeinsec_;
  ::google::protobuf::uint32 mailtype_;
  ::google::protobuf::uint32 mailid_;
  ::google::protobuf::uint32 fromid_;
  ::google::protobuf::uint32 destid_;
  ::google::protobuf::uint32 mailstate_;
  ::std::string* title_;
  ::std::string* fromusername_;
  ::std::string* destusername_;
  bool haveattachment_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_protocol_2fProto_2fMail_2eproto();
  friend void protobuf_AssignDesc_protocol_2fProto_2fMail_2eproto();
  friend void protobuf_ShutdownFile_protocol_2fProto_2fMail_2eproto();

  void InitAsDefaultInstance();
  static MailTitle* default_instance_;
};
// -------------------------------------------------------------------

class MailTitleList : public ::google::protobuf::Message {
 public:
  MailTitleList();
  virtual ~MailTitleList();

  MailTitleList(const MailTitleList& from);

  inline MailTitleList& operator=(const MailTitleList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MailTitleList& default_instance();

  void Swap(MailTitleList* other);

  // implements Message ----------------------------------------------

  MailTitleList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MailTitleList& from);
  void MergeFrom(const MailTitleList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protocol.mail.MailTitle mail = 1;
  inline int mail_size() const;
  inline void clear_mail();
  static const int kMailFieldNumber = 1;
  inline const ::protocol::mail::MailTitle& mail(int index) const;
  inline ::protocol::mail::MailTitle* mutable_mail(int index);
  inline ::protocol::mail::MailTitle* add_mail();
  inline const ::google::protobuf::RepeatedPtrField< ::protocol::mail::MailTitle >&
      mail() const;
  inline ::google::protobuf::RepeatedPtrField< ::protocol::mail::MailTitle >*
      mutable_mail();

  // @@protoc_insertion_point(class_scope:protocol.mail.MailTitleList)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::protocol::mail::MailTitle > mail_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_protocol_2fProto_2fMail_2eproto();
  friend void protobuf_AssignDesc_protocol_2fProto_2fMail_2eproto();
  friend void protobuf_ShutdownFile_protocol_2fProto_2fMail_2eproto();

  void InitAsDefaultInstance();
  static MailTitleList* default_instance_;
};
// -------------------------------------------------------------------

class AllItemData : public ::google::protobuf::Message {
 public:
  AllItemData();
  virtual ~AllItemData();

  AllItemData(const AllItemData& from);

  inline AllItemData& operator=(const AllItemData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AllItemData& default_instance();

  void Swap(AllItemData* other);

  // implements Message ----------------------------------------------

  AllItemData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AllItemData& from);
  void MergeFrom(const AllItemData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bytes itemData = 4;
  inline int itemdata_size() const;
  inline void clear_itemdata();
  static const int kItemDataFieldNumber = 4;
  inline const ::std::string& itemdata(int index) const;
  inline ::std::string* mutable_itemdata(int index);
  inline void set_itemdata(int index, const ::std::string& value);
  inline void set_itemdata(int index, const char* value);
  inline void set_itemdata(int index, const void* value, size_t size);
  inline ::std::string* add_itemdata();
  inline void add_itemdata(const ::std::string& value);
  inline void add_itemdata(const char* value);
  inline void add_itemdata(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& itemdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_itemdata();

  // @@protoc_insertion_point(class_scope:protocol.mail.AllItemData)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::std::string> itemdata_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_protocol_2fProto_2fMail_2eproto();
  friend void protobuf_AssignDesc_protocol_2fProto_2fMail_2eproto();
  friend void protobuf_ShutdownFile_protocol_2fProto_2fMail_2eproto();

  void InitAsDefaultInstance();
  static AllItemData* default_instance_;
};
// -------------------------------------------------------------------

class MailDetail : public ::google::protobuf::Message {
 public:
  MailDetail();
  virtual ~MailDetail();

  MailDetail(const MailDetail& from);

  inline MailDetail& operator=(const MailDetail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MailDetail& default_instance();

  void Swap(MailDetail* other);

  // implements Message ----------------------------------------------

  MailDetail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MailDetail& from);
  void MergeFrom(const MailDetail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 mailID = 1;
  inline bool has_mailid() const;
  inline void clear_mailid();
  static const int kMailIDFieldNumber = 1;
  inline ::google::protobuf::uint32 mailid() const;
  inline void set_mailid(::google::protobuf::uint32 value);

  // required string mainText = 2;
  inline bool has_maintext() const;
  inline void clear_maintext();
  static const int kMainTextFieldNumber = 2;
  inline const ::std::string& maintext() const;
  inline void set_maintext(const ::std::string& value);
  inline void set_maintext(const char* value);
  inline void set_maintext(const char* value, size_t size);
  inline ::std::string* mutable_maintext();
  inline ::std::string* release_maintext();
  inline void set_allocated_maintext(::std::string* maintext);

  // optional uint32 money = 3;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 3;
  inline ::google::protobuf::uint32 money() const;
  inline void set_money(::google::protobuf::uint32 value);

  // required bytes allItemData = 4;
  inline bool has_allitemdata() const;
  inline void clear_allitemdata();
  static const int kAllItemDataFieldNumber = 4;
  inline const ::std::string& allitemdata() const;
  inline void set_allitemdata(const ::std::string& value);
  inline void set_allitemdata(const char* value);
  inline void set_allitemdata(const void* value, size_t size);
  inline ::std::string* mutable_allitemdata();
  inline ::std::string* release_allitemdata();
  inline void set_allocated_allitemdata(::std::string* allitemdata);

  // optional uint32 moneyType = 5;
  inline bool has_moneytype() const;
  inline void clear_moneytype();
  static const int kMoneyTypeFieldNumber = 5;
  inline ::google::protobuf::uint32 moneytype() const;
  inline void set_moneytype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protocol.mail.MailDetail)
 private:
  inline void set_has_mailid();
  inline void clear_has_mailid();
  inline void set_has_maintext();
  inline void clear_has_maintext();
  inline void set_has_money();
  inline void clear_has_money();
  inline void set_has_allitemdata();
  inline void clear_has_allitemdata();
  inline void set_has_moneytype();
  inline void clear_has_moneytype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* maintext_;
  ::google::protobuf::uint32 mailid_;
  ::google::protobuf::uint32 money_;
  ::std::string* allitemdata_;
  ::google::protobuf::uint32 moneytype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_protocol_2fProto_2fMail_2eproto();
  friend void protobuf_AssignDesc_protocol_2fProto_2fMail_2eproto();
  friend void protobuf_ShutdownFile_protocol_2fProto_2fMail_2eproto();

  void InitAsDefaultInstance();
  static MailDetail* default_instance_;
};
// -------------------------------------------------------------------

class MailItem : public ::google::protobuf::Message {
 public:
  MailItem();
  virtual ~MailItem();

  MailItem(const MailItem& from);

  inline MailItem& operator=(const MailItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MailItem& default_instance();

  void Swap(MailItem* other);

  // implements Message ----------------------------------------------

  MailItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MailItem& from);
  void MergeFrom(const MailItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 itemBaseID = 1;
  inline bool has_itembaseid() const;
  inline void clear_itembaseid();
  static const int kItemBaseIDFieldNumber = 1;
  inline ::google::protobuf::uint32 itembaseid() const;
  inline void set_itembaseid(::google::protobuf::uint32 value);

  // required uint32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // required bool needBind = 3;
  inline bool has_needbind() const;
  inline void clear_needbind();
  static const int kNeedBindFieldNumber = 3;
  inline bool needbind() const;
  inline void set_needbind(bool value);

  // required uint32 quality = 4;
  inline bool has_quality() const;
  inline void clear_quality();
  static const int kQualityFieldNumber = 4;
  inline ::google::protobuf::uint32 quality() const;
  inline void set_quality(::google::protobuf::uint32 value);

  // required uint32 identify = 5;
  inline bool has_identify() const;
  inline void clear_identify();
  static const int kIdentifyFieldNumber = 5;
  inline ::google::protobuf::uint32 identify() const;
  inline void set_identify(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protocol.mail.MailItem)
 private:
  inline void set_has_itembaseid();
  inline void clear_has_itembaseid();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_needbind();
  inline void clear_has_needbind();
  inline void set_has_quality();
  inline void clear_has_quality();
  inline void set_has_identify();
  inline void clear_has_identify();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 itembaseid_;
  ::google::protobuf::uint32 num_;
  bool needbind_;
  ::google::protobuf::uint32 quality_;
  ::google::protobuf::uint32 identify_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_protocol_2fProto_2fMail_2eproto();
  friend void protobuf_AssignDesc_protocol_2fProto_2fMail_2eproto();
  friend void protobuf_ShutdownFile_protocol_2fProto_2fMail_2eproto();

  void InitAsDefaultInstance();
  static MailItem* default_instance_;
};
// -------------------------------------------------------------------

class MoneyData : public ::google::protobuf::Message {
 public:
  MoneyData();
  virtual ~MoneyData();

  MoneyData(const MoneyData& from);

  inline MoneyData& operator=(const MoneyData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MoneyData& default_instance();

  void Swap(MoneyData* other);

  // implements Message ----------------------------------------------

  MoneyData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MoneyData& from);
  void MergeFrom(const MoneyData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 money = 1;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 1;
  inline ::google::protobuf::uint32 money() const;
  inline void set_money(::google::protobuf::uint32 value);

  // required uint32 moneyType = 2;
  inline bool has_moneytype() const;
  inline void clear_moneytype();
  static const int kMoneyTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 moneytype() const;
  inline void set_moneytype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:protocol.mail.MoneyData)
 private:
  inline void set_has_money();
  inline void clear_has_money();
  inline void set_has_moneytype();
  inline void clear_has_moneytype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 money_;
  ::google::protobuf::uint32 moneytype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_protocol_2fProto_2fMail_2eproto();
  friend void protobuf_AssignDesc_protocol_2fProto_2fMail_2eproto();
  friend void protobuf_ShutdownFile_protocol_2fProto_2fMail_2eproto();

  void InitAsDefaultInstance();
  static MoneyData* default_instance_;
};
// -------------------------------------------------------------------

class MoneyDataBinary : public ::google::protobuf::Message {
 public:
  MoneyDataBinary();
  virtual ~MoneyDataBinary();

  MoneyDataBinary(const MoneyDataBinary& from);

  inline MoneyDataBinary& operator=(const MoneyDataBinary& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MoneyDataBinary& default_instance();

  void Swap(MoneyDataBinary* other);

  // implements Message ----------------------------------------------

  MoneyDataBinary* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MoneyDataBinary& from);
  void MergeFrom(const MoneyDataBinary& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protocol.mail.MoneyData moneyData = 1;
  inline int moneydata_size() const;
  inline void clear_moneydata();
  static const int kMoneyDataFieldNumber = 1;
  inline const ::protocol::mail::MoneyData& moneydata(int index) const;
  inline ::protocol::mail::MoneyData* mutable_moneydata(int index);
  inline ::protocol::mail::MoneyData* add_moneydata();
  inline const ::google::protobuf::RepeatedPtrField< ::protocol::mail::MoneyData >&
      moneydata() const;
  inline ::google::protobuf::RepeatedPtrField< ::protocol::mail::MoneyData >*
      mutable_moneydata();

  // @@protoc_insertion_point(class_scope:protocol.mail.MoneyDataBinary)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::protocol::mail::MoneyData > moneydata_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_protocol_2fProto_2fMail_2eproto();
  friend void protobuf_AssignDesc_protocol_2fProto_2fMail_2eproto();
  friend void protobuf_ShutdownFile_protocol_2fProto_2fMail_2eproto();

  void InitAsDefaultInstance();
  static MoneyDataBinary* default_instance_;
};
// -------------------------------------------------------------------

class MoneyAndItemData : public ::google::protobuf::Message {
 public:
  MoneyAndItemData();
  virtual ~MoneyAndItemData();

  MoneyAndItemData(const MoneyAndItemData& from);

  inline MoneyAndItemData& operator=(const MoneyAndItemData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MoneyAndItemData& default_instance();

  void Swap(MoneyAndItemData* other);

  // implements Message ----------------------------------------------

  MoneyAndItemData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MoneyAndItemData& from);
  void MergeFrom(const MoneyAndItemData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes moneyDataBinary = 1;
  inline bool has_moneydatabinary() const;
  inline void clear_moneydatabinary();
  static const int kMoneyDataBinaryFieldNumber = 1;
  inline const ::std::string& moneydatabinary() const;
  inline void set_moneydatabinary(const ::std::string& value);
  inline void set_moneydatabinary(const char* value);
  inline void set_moneydatabinary(const void* value, size_t size);
  inline ::std::string* mutable_moneydatabinary();
  inline ::std::string* release_moneydatabinary();
  inline void set_allocated_moneydatabinary(::std::string* moneydatabinary);

  // optional bytes itemData = 2;
  inline bool has_itemdata() const;
  inline void clear_itemdata();
  static const int kItemDataFieldNumber = 2;
  inline const ::std::string& itemdata() const;
  inline void set_itemdata(const ::std::string& value);
  inline void set_itemdata(const char* value);
  inline void set_itemdata(const void* value, size_t size);
  inline ::std::string* mutable_itemdata();
  inline ::std::string* release_itemdata();
  inline void set_allocated_itemdata(::std::string* itemdata);

  // @@protoc_insertion_point(class_scope:protocol.mail.MoneyAndItemData)
 private:
  inline void set_has_moneydatabinary();
  inline void clear_has_moneydatabinary();
  inline void set_has_itemdata();
  inline void clear_has_itemdata();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* moneydatabinary_;
  ::std::string* itemdata_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_protocol_2fProto_2fMail_2eproto();
  friend void protobuf_AssignDesc_protocol_2fProto_2fMail_2eproto();
  friend void protobuf_ShutdownFile_protocol_2fProto_2fMail_2eproto();

  void InitAsDefaultInstance();
  static MoneyAndItemData* default_instance_;
};
// -------------------------------------------------------------------

class CreateMailData : public ::google::protobuf::Message {
 public:
  CreateMailData();
  virtual ~CreateMailData();

  CreateMailData(const CreateMailData& from);

  inline CreateMailData& operator=(const CreateMailData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateMailData& default_instance();

  void Swap(CreateMailData* other);

  // implements Message ----------------------------------------------

  CreateMailData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CreateMailData& from);
  void MergeFrom(const CreateMailData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 mailType = 1;
  inline bool has_mailtype() const;
  inline void clear_mailtype();
  static const int kMailTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 mailtype() const;
  inline void set_mailtype(::google::protobuf::uint32 value);

  // optional uint32 fromID = 2;
  inline bool has_fromid() const;
  inline void clear_fromid();
  static const int kFromIDFieldNumber = 2;
  inline ::google::protobuf::uint32 fromid() const;
  inline void set_fromid(::google::protobuf::uint32 value);

  // optional string title = 3;
  inline bool has_title() const;
  inline void clear_title();
  static const int kTitleFieldNumber = 3;
  inline const ::std::string& title() const;
  inline void set_title(const ::std::string& value);
  inline void set_title(const char* value);
  inline void set_title(const char* value, size_t size);
  inline ::std::string* mutable_title();
  inline ::std::string* release_title();
  inline void set_allocated_title(::std::string* title);

  // optional string mainText = 4;
  inline bool has_maintext() const;
  inline void clear_maintext();
  static const int kMainTextFieldNumber = 4;
  inline const ::std::string& maintext() const;
  inline void set_maintext(const ::std::string& value);
  inline void set_maintext(const char* value);
  inline void set_maintext(const char* value, size_t size);
  inline ::std::string* mutable_maintext();
  inline ::std::string* release_maintext();
  inline void set_allocated_maintext(::std::string* maintext);

  // optional bytes moneyDataBinary = 5;
  inline bool has_moneydatabinary() const;
  inline void clear_moneydatabinary();
  static const int kMoneyDataBinaryFieldNumber = 5;
  inline const ::std::string& moneydatabinary() const;
  inline void set_moneydatabinary(const ::std::string& value);
  inline void set_moneydatabinary(const char* value);
  inline void set_moneydatabinary(const void* value, size_t size);
  inline ::std::string* mutable_moneydatabinary();
  inline ::std::string* release_moneydatabinary();
  inline void set_allocated_moneydatabinary(::std::string* moneydatabinary);

  // optional bytes itemData = 6;
  inline bool has_itemdata() const;
  inline void clear_itemdata();
  static const int kItemDataFieldNumber = 6;
  inline const ::std::string& itemdata() const;
  inline void set_itemdata(const ::std::string& value);
  inline void set_itemdata(const char* value);
  inline void set_itemdata(const void* value, size_t size);
  inline ::std::string* mutable_itemdata();
  inline ::std::string* release_itemdata();
  inline void set_allocated_itemdata(::std::string* itemdata);

  // repeated .protocol.mail.MailItem itemList = 7;
  inline int itemlist_size() const;
  inline void clear_itemlist();
  static const int kItemListFieldNumber = 7;
  inline const ::protocol::mail::MailItem& itemlist(int index) const;
  inline ::protocol::mail::MailItem* mutable_itemlist(int index);
  inline ::protocol::mail::MailItem* add_itemlist();
  inline const ::google::protobuf::RepeatedPtrField< ::protocol::mail::MailItem >&
      itemlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::protocol::mail::MailItem >*
      mutable_itemlist();

  // @@protoc_insertion_point(class_scope:protocol.mail.CreateMailData)
 private:
  inline void set_has_mailtype();
  inline void clear_has_mailtype();
  inline void set_has_fromid();
  inline void clear_has_fromid();
  inline void set_has_title();
  inline void clear_has_title();
  inline void set_has_maintext();
  inline void clear_has_maintext();
  inline void set_has_moneydatabinary();
  inline void clear_has_moneydatabinary();
  inline void set_has_itemdata();
  inline void clear_has_itemdata();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 mailtype_;
  ::google::protobuf::uint32 fromid_;
  ::std::string* title_;
  ::std::string* maintext_;
  ::std::string* moneydatabinary_;
  ::std::string* itemdata_;
  ::google::protobuf::RepeatedPtrField< ::protocol::mail::MailItem > itemlist_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_protocol_2fProto_2fMail_2eproto();
  friend void protobuf_AssignDesc_protocol_2fProto_2fMail_2eproto();
  friend void protobuf_ShutdownFile_protocol_2fProto_2fMail_2eproto();

  void InitAsDefaultInstance();
  static CreateMailData* default_instance_;
};
// -------------------------------------------------------------------

class SendSysMailData : public ::google::protobuf::Message {
 public:
  SendSysMailData();
  virtual ~SendSysMailData();

  SendSysMailData(const SendSysMailData& from);

  inline SendSysMailData& operator=(const SendSysMailData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SendSysMailData& default_instance();

  void Swap(SendSysMailData* other);

  // implements Message ----------------------------------------------

  SendSysMailData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SendSysMailData& from);
  void MergeFrom(const SendSysMailData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .protocol.mail.eSendMailGroupType groupType = 1;
  inline bool has_grouptype() const;
  inline void clear_grouptype();
  static const int kGroupTypeFieldNumber = 1;
  inline ::protocol::mail::eSendMailGroupType grouptype() const;
  inline void set_grouptype(::protocol::mail::eSendMailGroupType value);

  // repeated uint32 destUserIDList = 2;
  inline int destuseridlist_size() const;
  inline void clear_destuseridlist();
  static const int kDestUserIDListFieldNumber = 2;
  inline ::google::protobuf::uint32 destuseridlist(int index) const;
  inline void set_destuseridlist(int index, ::google::protobuf::uint32 value);
  inline void add_destuseridlist(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      destuseridlist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_destuseridlist();

  // repeated string destUserNameList = 3;
  inline int destusernamelist_size() const;
  inline void clear_destusernamelist();
  static const int kDestUserNameListFieldNumber = 3;
  inline const ::std::string& destusernamelist(int index) const;
  inline ::std::string* mutable_destusernamelist(int index);
  inline void set_destusernamelist(int index, const ::std::string& value);
  inline void set_destusernamelist(int index, const char* value);
  inline void set_destusernamelist(int index, const char* value, size_t size);
  inline ::std::string* add_destusernamelist();
  inline void add_destusernamelist(const ::std::string& value);
  inline void add_destusernamelist(const char* value);
  inline void add_destusernamelist(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& destusernamelist() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_destusernamelist();

  // optional uint32 srcPlatformType = 4;
  inline bool has_srcplatformtype() const;
  inline void clear_srcplatformtype();
  static const int kSrcPlatformTypeFieldNumber = 4;
  inline ::google::protobuf::uint32 srcplatformtype() const;
  inline void set_srcplatformtype(::google::protobuf::uint32 value);

  // optional uint32 srcConnID = 5;
  inline bool has_srcconnid() const;
  inline void clear_srcconnid();
  static const int kSrcConnIDFieldNumber = 5;
  inline ::google::protobuf::uint32 srcconnid() const;
  inline void set_srcconnid(::google::protobuf::uint32 value);

  // required .protocol.mail.CreateMailData createMailData = 6;
  inline bool has_createmaildata() const;
  inline void clear_createmaildata();
  static const int kCreateMailDataFieldNumber = 6;
  inline const ::protocol::mail::CreateMailData& createmaildata() const;
  inline ::protocol::mail::CreateMailData* mutable_createmaildata();
  inline ::protocol::mail::CreateMailData* release_createmaildata();
  inline void set_allocated_createmaildata(::protocol::mail::CreateMailData* createmaildata);

  // @@protoc_insertion_point(class_scope:protocol.mail.SendSysMailData)
 private:
  inline void set_has_grouptype();
  inline void clear_has_grouptype();
  inline void set_has_srcplatformtype();
  inline void clear_has_srcplatformtype();
  inline void set_has_srcconnid();
  inline void clear_has_srcconnid();
  inline void set_has_createmaildata();
  inline void clear_has_createmaildata();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > destuseridlist_;
  int grouptype_;
  ::google::protobuf::uint32 srcplatformtype_;
  ::google::protobuf::RepeatedPtrField< ::std::string> destusernamelist_;
  ::protocol::mail::CreateMailData* createmaildata_;
  ::google::protobuf::uint32 srcconnid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_protocol_2fProto_2fMail_2eproto();
  friend void protobuf_AssignDesc_protocol_2fProto_2fMail_2eproto();
  friend void protobuf_ShutdownFile_protocol_2fProto_2fMail_2eproto();

  void InitAsDefaultInstance();
  static SendSysMailData* default_instance_;
};
// ===================================================================


// ===================================================================

// MailTitle

// required uint32 createTimeInSec = 1;
inline bool MailTitle::has_createtimeinsec() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MailTitle::set_has_createtimeinsec() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MailTitle::clear_has_createtimeinsec() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MailTitle::clear_createtimeinsec() {
  createtimeinsec_ = 0u;
  clear_has_createtimeinsec();
}
inline ::google::protobuf::uint32 MailTitle::createtimeinsec() const {
  return createtimeinsec_;
}
inline void MailTitle::set_createtimeinsec(::google::protobuf::uint32 value) {
  set_has_createtimeinsec();
  createtimeinsec_ = value;
}

// required uint32 mailType = 2;
inline bool MailTitle::has_mailtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MailTitle::set_has_mailtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MailTitle::clear_has_mailtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MailTitle::clear_mailtype() {
  mailtype_ = 0u;
  clear_has_mailtype();
}
inline ::google::protobuf::uint32 MailTitle::mailtype() const {
  return mailtype_;
}
inline void MailTitle::set_mailtype(::google::protobuf::uint32 value) {
  set_has_mailtype();
  mailtype_ = value;
}

// required uint32 mailID = 3;
inline bool MailTitle::has_mailid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MailTitle::set_has_mailid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MailTitle::clear_has_mailid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MailTitle::clear_mailid() {
  mailid_ = 0u;
  clear_has_mailid();
}
inline ::google::protobuf::uint32 MailTitle::mailid() const {
  return mailid_;
}
inline void MailTitle::set_mailid(::google::protobuf::uint32 value) {
  set_has_mailid();
  mailid_ = value;
}

// optional uint32 fromID = 4;
inline bool MailTitle::has_fromid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MailTitle::set_has_fromid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MailTitle::clear_has_fromid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MailTitle::clear_fromid() {
  fromid_ = 0u;
  clear_has_fromid();
}
inline ::google::protobuf::uint32 MailTitle::fromid() const {
  return fromid_;
}
inline void MailTitle::set_fromid(::google::protobuf::uint32 value) {
  set_has_fromid();
  fromid_ = value;
}

// optional uint32 destID = 5;
inline bool MailTitle::has_destid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MailTitle::set_has_destid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MailTitle::clear_has_destid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MailTitle::clear_destid() {
  destid_ = 0u;
  clear_has_destid();
}
inline ::google::protobuf::uint32 MailTitle::destid() const {
  return destid_;
}
inline void MailTitle::set_destid(::google::protobuf::uint32 value) {
  set_has_destid();
  destid_ = value;
}

// required uint32 mailState = 6;
inline bool MailTitle::has_mailstate() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MailTitle::set_has_mailstate() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MailTitle::clear_has_mailstate() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MailTitle::clear_mailstate() {
  mailstate_ = 0u;
  clear_has_mailstate();
}
inline ::google::protobuf::uint32 MailTitle::mailstate() const {
  return mailstate_;
}
inline void MailTitle::set_mailstate(::google::protobuf::uint32 value) {
  set_has_mailstate();
  mailstate_ = value;
}

// required string title = 7;
inline bool MailTitle::has_title() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MailTitle::set_has_title() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MailTitle::clear_has_title() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MailTitle::clear_title() {
  if (title_ != &::google::protobuf::internal::kEmptyString) {
    title_->clear();
  }
  clear_has_title();
}
inline const ::std::string& MailTitle::title() const {
  return *title_;
}
inline void MailTitle::set_title(const ::std::string& value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(value);
}
inline void MailTitle::set_title(const char* value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(value);
}
inline void MailTitle::set_title(const char* value, size_t size) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MailTitle::mutable_title() {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  return title_;
}
inline ::std::string* MailTitle::release_title() {
  clear_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = title_;
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MailTitle::set_allocated_title(::std::string* title) {
  if (title_ != &::google::protobuf::internal::kEmptyString) {
    delete title_;
  }
  if (title) {
    set_has_title();
    title_ = title;
  } else {
    clear_has_title();
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string fromUserName = 8;
inline bool MailTitle::has_fromusername() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MailTitle::set_has_fromusername() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MailTitle::clear_has_fromusername() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MailTitle::clear_fromusername() {
  if (fromusername_ != &::google::protobuf::internal::kEmptyString) {
    fromusername_->clear();
  }
  clear_has_fromusername();
}
inline const ::std::string& MailTitle::fromusername() const {
  return *fromusername_;
}
inline void MailTitle::set_fromusername(const ::std::string& value) {
  set_has_fromusername();
  if (fromusername_ == &::google::protobuf::internal::kEmptyString) {
    fromusername_ = new ::std::string;
  }
  fromusername_->assign(value);
}
inline void MailTitle::set_fromusername(const char* value) {
  set_has_fromusername();
  if (fromusername_ == &::google::protobuf::internal::kEmptyString) {
    fromusername_ = new ::std::string;
  }
  fromusername_->assign(value);
}
inline void MailTitle::set_fromusername(const char* value, size_t size) {
  set_has_fromusername();
  if (fromusername_ == &::google::protobuf::internal::kEmptyString) {
    fromusername_ = new ::std::string;
  }
  fromusername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MailTitle::mutable_fromusername() {
  set_has_fromusername();
  if (fromusername_ == &::google::protobuf::internal::kEmptyString) {
    fromusername_ = new ::std::string;
  }
  return fromusername_;
}
inline ::std::string* MailTitle::release_fromusername() {
  clear_has_fromusername();
  if (fromusername_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = fromusername_;
    fromusername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MailTitle::set_allocated_fromusername(::std::string* fromusername) {
  if (fromusername_ != &::google::protobuf::internal::kEmptyString) {
    delete fromusername_;
  }
  if (fromusername) {
    set_has_fromusername();
    fromusername_ = fromusername;
  } else {
    clear_has_fromusername();
    fromusername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string destUserName = 9;
inline bool MailTitle::has_destusername() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void MailTitle::set_has_destusername() {
  _has_bits_[0] |= 0x00000100u;
}
inline void MailTitle::clear_has_destusername() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void MailTitle::clear_destusername() {
  if (destusername_ != &::google::protobuf::internal::kEmptyString) {
    destusername_->clear();
  }
  clear_has_destusername();
}
inline const ::std::string& MailTitle::destusername() const {
  return *destusername_;
}
inline void MailTitle::set_destusername(const ::std::string& value) {
  set_has_destusername();
  if (destusername_ == &::google::protobuf::internal::kEmptyString) {
    destusername_ = new ::std::string;
  }
  destusername_->assign(value);
}
inline void MailTitle::set_destusername(const char* value) {
  set_has_destusername();
  if (destusername_ == &::google::protobuf::internal::kEmptyString) {
    destusername_ = new ::std::string;
  }
  destusername_->assign(value);
}
inline void MailTitle::set_destusername(const char* value, size_t size) {
  set_has_destusername();
  if (destusername_ == &::google::protobuf::internal::kEmptyString) {
    destusername_ = new ::std::string;
  }
  destusername_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MailTitle::mutable_destusername() {
  set_has_destusername();
  if (destusername_ == &::google::protobuf::internal::kEmptyString) {
    destusername_ = new ::std::string;
  }
  return destusername_;
}
inline ::std::string* MailTitle::release_destusername() {
  clear_has_destusername();
  if (destusername_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = destusername_;
    destusername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MailTitle::set_allocated_destusername(::std::string* destusername) {
  if (destusername_ != &::google::protobuf::internal::kEmptyString) {
    delete destusername_;
  }
  if (destusername) {
    set_has_destusername();
    destusername_ = destusername;
  } else {
    clear_has_destusername();
    destusername_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bool haveAttachment = 10;
inline bool MailTitle::has_haveattachment() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void MailTitle::set_has_haveattachment() {
  _has_bits_[0] |= 0x00000200u;
}
inline void MailTitle::clear_has_haveattachment() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void MailTitle::clear_haveattachment() {
  haveattachment_ = false;
  clear_has_haveattachment();
}
inline bool MailTitle::haveattachment() const {
  return haveattachment_;
}
inline void MailTitle::set_haveattachment(bool value) {
  set_has_haveattachment();
  haveattachment_ = value;
}

// -------------------------------------------------------------------

// MailTitleList

// repeated .protocol.mail.MailTitle mail = 1;
inline int MailTitleList::mail_size() const {
  return mail_.size();
}
inline void MailTitleList::clear_mail() {
  mail_.Clear();
}
inline const ::protocol::mail::MailTitle& MailTitleList::mail(int index) const {
  return mail_.Get(index);
}
inline ::protocol::mail::MailTitle* MailTitleList::mutable_mail(int index) {
  return mail_.Mutable(index);
}
inline ::protocol::mail::MailTitle* MailTitleList::add_mail() {
  return mail_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::mail::MailTitle >&
MailTitleList::mail() const {
  return mail_;
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::mail::MailTitle >*
MailTitleList::mutable_mail() {
  return &mail_;
}

// -------------------------------------------------------------------

// AllItemData

// repeated bytes itemData = 4;
inline int AllItemData::itemdata_size() const {
  return itemdata_.size();
}
inline void AllItemData::clear_itemdata() {
  itemdata_.Clear();
}
inline const ::std::string& AllItemData::itemdata(int index) const {
  return itemdata_.Get(index);
}
inline ::std::string* AllItemData::mutable_itemdata(int index) {
  return itemdata_.Mutable(index);
}
inline void AllItemData::set_itemdata(int index, const ::std::string& value) {
  itemdata_.Mutable(index)->assign(value);
}
inline void AllItemData::set_itemdata(int index, const char* value) {
  itemdata_.Mutable(index)->assign(value);
}
inline void AllItemData::set_itemdata(int index, const void* value, size_t size) {
  itemdata_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AllItemData::add_itemdata() {
  return itemdata_.Add();
}
inline void AllItemData::add_itemdata(const ::std::string& value) {
  itemdata_.Add()->assign(value);
}
inline void AllItemData::add_itemdata(const char* value) {
  itemdata_.Add()->assign(value);
}
inline void AllItemData::add_itemdata(const void* value, size_t size) {
  itemdata_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
AllItemData::itemdata() const {
  return itemdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
AllItemData::mutable_itemdata() {
  return &itemdata_;
}

// -------------------------------------------------------------------

// MailDetail

// required uint32 mailID = 1;
inline bool MailDetail::has_mailid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MailDetail::set_has_mailid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MailDetail::clear_has_mailid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MailDetail::clear_mailid() {
  mailid_ = 0u;
  clear_has_mailid();
}
inline ::google::protobuf::uint32 MailDetail::mailid() const {
  return mailid_;
}
inline void MailDetail::set_mailid(::google::protobuf::uint32 value) {
  set_has_mailid();
  mailid_ = value;
}

// required string mainText = 2;
inline bool MailDetail::has_maintext() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MailDetail::set_has_maintext() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MailDetail::clear_has_maintext() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MailDetail::clear_maintext() {
  if (maintext_ != &::google::protobuf::internal::kEmptyString) {
    maintext_->clear();
  }
  clear_has_maintext();
}
inline const ::std::string& MailDetail::maintext() const {
  return *maintext_;
}
inline void MailDetail::set_maintext(const ::std::string& value) {
  set_has_maintext();
  if (maintext_ == &::google::protobuf::internal::kEmptyString) {
    maintext_ = new ::std::string;
  }
  maintext_->assign(value);
}
inline void MailDetail::set_maintext(const char* value) {
  set_has_maintext();
  if (maintext_ == &::google::protobuf::internal::kEmptyString) {
    maintext_ = new ::std::string;
  }
  maintext_->assign(value);
}
inline void MailDetail::set_maintext(const char* value, size_t size) {
  set_has_maintext();
  if (maintext_ == &::google::protobuf::internal::kEmptyString) {
    maintext_ = new ::std::string;
  }
  maintext_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MailDetail::mutable_maintext() {
  set_has_maintext();
  if (maintext_ == &::google::protobuf::internal::kEmptyString) {
    maintext_ = new ::std::string;
  }
  return maintext_;
}
inline ::std::string* MailDetail::release_maintext() {
  clear_has_maintext();
  if (maintext_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = maintext_;
    maintext_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MailDetail::set_allocated_maintext(::std::string* maintext) {
  if (maintext_ != &::google::protobuf::internal::kEmptyString) {
    delete maintext_;
  }
  if (maintext) {
    set_has_maintext();
    maintext_ = maintext;
  } else {
    clear_has_maintext();
    maintext_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 money = 3;
inline bool MailDetail::has_money() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MailDetail::set_has_money() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MailDetail::clear_has_money() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MailDetail::clear_money() {
  money_ = 0u;
  clear_has_money();
}
inline ::google::protobuf::uint32 MailDetail::money() const {
  return money_;
}
inline void MailDetail::set_money(::google::protobuf::uint32 value) {
  set_has_money();
  money_ = value;
}

// required bytes allItemData = 4;
inline bool MailDetail::has_allitemdata() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MailDetail::set_has_allitemdata() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MailDetail::clear_has_allitemdata() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MailDetail::clear_allitemdata() {
  if (allitemdata_ != &::google::protobuf::internal::kEmptyString) {
    allitemdata_->clear();
  }
  clear_has_allitemdata();
}
inline const ::std::string& MailDetail::allitemdata() const {
  return *allitemdata_;
}
inline void MailDetail::set_allitemdata(const ::std::string& value) {
  set_has_allitemdata();
  if (allitemdata_ == &::google::protobuf::internal::kEmptyString) {
    allitemdata_ = new ::std::string;
  }
  allitemdata_->assign(value);
}
inline void MailDetail::set_allitemdata(const char* value) {
  set_has_allitemdata();
  if (allitemdata_ == &::google::protobuf::internal::kEmptyString) {
    allitemdata_ = new ::std::string;
  }
  allitemdata_->assign(value);
}
inline void MailDetail::set_allitemdata(const void* value, size_t size) {
  set_has_allitemdata();
  if (allitemdata_ == &::google::protobuf::internal::kEmptyString) {
    allitemdata_ = new ::std::string;
  }
  allitemdata_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MailDetail::mutable_allitemdata() {
  set_has_allitemdata();
  if (allitemdata_ == &::google::protobuf::internal::kEmptyString) {
    allitemdata_ = new ::std::string;
  }
  return allitemdata_;
}
inline ::std::string* MailDetail::release_allitemdata() {
  clear_has_allitemdata();
  if (allitemdata_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = allitemdata_;
    allitemdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MailDetail::set_allocated_allitemdata(::std::string* allitemdata) {
  if (allitemdata_ != &::google::protobuf::internal::kEmptyString) {
    delete allitemdata_;
  }
  if (allitemdata) {
    set_has_allitemdata();
    allitemdata_ = allitemdata;
  } else {
    clear_has_allitemdata();
    allitemdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 moneyType = 5;
inline bool MailDetail::has_moneytype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MailDetail::set_has_moneytype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MailDetail::clear_has_moneytype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MailDetail::clear_moneytype() {
  moneytype_ = 0u;
  clear_has_moneytype();
}
inline ::google::protobuf::uint32 MailDetail::moneytype() const {
  return moneytype_;
}
inline void MailDetail::set_moneytype(::google::protobuf::uint32 value) {
  set_has_moneytype();
  moneytype_ = value;
}

// -------------------------------------------------------------------

// MailItem

// required uint32 itemBaseID = 1;
inline bool MailItem::has_itembaseid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MailItem::set_has_itembaseid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MailItem::clear_has_itembaseid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MailItem::clear_itembaseid() {
  itembaseid_ = 0u;
  clear_has_itembaseid();
}
inline ::google::protobuf::uint32 MailItem::itembaseid() const {
  return itembaseid_;
}
inline void MailItem::set_itembaseid(::google::protobuf::uint32 value) {
  set_has_itembaseid();
  itembaseid_ = value;
}

// required uint32 num = 2;
inline bool MailItem::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MailItem::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MailItem::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MailItem::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 MailItem::num() const {
  return num_;
}
inline void MailItem::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
}

// required bool needBind = 3;
inline bool MailItem::has_needbind() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MailItem::set_has_needbind() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MailItem::clear_has_needbind() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MailItem::clear_needbind() {
  needbind_ = false;
  clear_has_needbind();
}
inline bool MailItem::needbind() const {
  return needbind_;
}
inline void MailItem::set_needbind(bool value) {
  set_has_needbind();
  needbind_ = value;
}

// required uint32 quality = 4;
inline bool MailItem::has_quality() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MailItem::set_has_quality() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MailItem::clear_has_quality() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MailItem::clear_quality() {
  quality_ = 0u;
  clear_has_quality();
}
inline ::google::protobuf::uint32 MailItem::quality() const {
  return quality_;
}
inline void MailItem::set_quality(::google::protobuf::uint32 value) {
  set_has_quality();
  quality_ = value;
}

// required uint32 identify = 5;
inline bool MailItem::has_identify() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MailItem::set_has_identify() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MailItem::clear_has_identify() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MailItem::clear_identify() {
  identify_ = 0u;
  clear_has_identify();
}
inline ::google::protobuf::uint32 MailItem::identify() const {
  return identify_;
}
inline void MailItem::set_identify(::google::protobuf::uint32 value) {
  set_has_identify();
  identify_ = value;
}

// -------------------------------------------------------------------

// MoneyData

// required uint32 money = 1;
inline bool MoneyData::has_money() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MoneyData::set_has_money() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MoneyData::clear_has_money() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MoneyData::clear_money() {
  money_ = 0u;
  clear_has_money();
}
inline ::google::protobuf::uint32 MoneyData::money() const {
  return money_;
}
inline void MoneyData::set_money(::google::protobuf::uint32 value) {
  set_has_money();
  money_ = value;
}

// required uint32 moneyType = 2;
inline bool MoneyData::has_moneytype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MoneyData::set_has_moneytype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MoneyData::clear_has_moneytype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MoneyData::clear_moneytype() {
  moneytype_ = 0u;
  clear_has_moneytype();
}
inline ::google::protobuf::uint32 MoneyData::moneytype() const {
  return moneytype_;
}
inline void MoneyData::set_moneytype(::google::protobuf::uint32 value) {
  set_has_moneytype();
  moneytype_ = value;
}

// -------------------------------------------------------------------

// MoneyDataBinary

// repeated .protocol.mail.MoneyData moneyData = 1;
inline int MoneyDataBinary::moneydata_size() const {
  return moneydata_.size();
}
inline void MoneyDataBinary::clear_moneydata() {
  moneydata_.Clear();
}
inline const ::protocol::mail::MoneyData& MoneyDataBinary::moneydata(int index) const {
  return moneydata_.Get(index);
}
inline ::protocol::mail::MoneyData* MoneyDataBinary::mutable_moneydata(int index) {
  return moneydata_.Mutable(index);
}
inline ::protocol::mail::MoneyData* MoneyDataBinary::add_moneydata() {
  return moneydata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::mail::MoneyData >&
MoneyDataBinary::moneydata() const {
  return moneydata_;
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::mail::MoneyData >*
MoneyDataBinary::mutable_moneydata() {
  return &moneydata_;
}

// -------------------------------------------------------------------

// MoneyAndItemData

// optional bytes moneyDataBinary = 1;
inline bool MoneyAndItemData::has_moneydatabinary() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MoneyAndItemData::set_has_moneydatabinary() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MoneyAndItemData::clear_has_moneydatabinary() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MoneyAndItemData::clear_moneydatabinary() {
  if (moneydatabinary_ != &::google::protobuf::internal::kEmptyString) {
    moneydatabinary_->clear();
  }
  clear_has_moneydatabinary();
}
inline const ::std::string& MoneyAndItemData::moneydatabinary() const {
  return *moneydatabinary_;
}
inline void MoneyAndItemData::set_moneydatabinary(const ::std::string& value) {
  set_has_moneydatabinary();
  if (moneydatabinary_ == &::google::protobuf::internal::kEmptyString) {
    moneydatabinary_ = new ::std::string;
  }
  moneydatabinary_->assign(value);
}
inline void MoneyAndItemData::set_moneydatabinary(const char* value) {
  set_has_moneydatabinary();
  if (moneydatabinary_ == &::google::protobuf::internal::kEmptyString) {
    moneydatabinary_ = new ::std::string;
  }
  moneydatabinary_->assign(value);
}
inline void MoneyAndItemData::set_moneydatabinary(const void* value, size_t size) {
  set_has_moneydatabinary();
  if (moneydatabinary_ == &::google::protobuf::internal::kEmptyString) {
    moneydatabinary_ = new ::std::string;
  }
  moneydatabinary_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MoneyAndItemData::mutable_moneydatabinary() {
  set_has_moneydatabinary();
  if (moneydatabinary_ == &::google::protobuf::internal::kEmptyString) {
    moneydatabinary_ = new ::std::string;
  }
  return moneydatabinary_;
}
inline ::std::string* MoneyAndItemData::release_moneydatabinary() {
  clear_has_moneydatabinary();
  if (moneydatabinary_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = moneydatabinary_;
    moneydatabinary_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MoneyAndItemData::set_allocated_moneydatabinary(::std::string* moneydatabinary) {
  if (moneydatabinary_ != &::google::protobuf::internal::kEmptyString) {
    delete moneydatabinary_;
  }
  if (moneydatabinary) {
    set_has_moneydatabinary();
    moneydatabinary_ = moneydatabinary;
  } else {
    clear_has_moneydatabinary();
    moneydatabinary_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes itemData = 2;
inline bool MoneyAndItemData::has_itemdata() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MoneyAndItemData::set_has_itemdata() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MoneyAndItemData::clear_has_itemdata() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MoneyAndItemData::clear_itemdata() {
  if (itemdata_ != &::google::protobuf::internal::kEmptyString) {
    itemdata_->clear();
  }
  clear_has_itemdata();
}
inline const ::std::string& MoneyAndItemData::itemdata() const {
  return *itemdata_;
}
inline void MoneyAndItemData::set_itemdata(const ::std::string& value) {
  set_has_itemdata();
  if (itemdata_ == &::google::protobuf::internal::kEmptyString) {
    itemdata_ = new ::std::string;
  }
  itemdata_->assign(value);
}
inline void MoneyAndItemData::set_itemdata(const char* value) {
  set_has_itemdata();
  if (itemdata_ == &::google::protobuf::internal::kEmptyString) {
    itemdata_ = new ::std::string;
  }
  itemdata_->assign(value);
}
inline void MoneyAndItemData::set_itemdata(const void* value, size_t size) {
  set_has_itemdata();
  if (itemdata_ == &::google::protobuf::internal::kEmptyString) {
    itemdata_ = new ::std::string;
  }
  itemdata_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MoneyAndItemData::mutable_itemdata() {
  set_has_itemdata();
  if (itemdata_ == &::google::protobuf::internal::kEmptyString) {
    itemdata_ = new ::std::string;
  }
  return itemdata_;
}
inline ::std::string* MoneyAndItemData::release_itemdata() {
  clear_has_itemdata();
  if (itemdata_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = itemdata_;
    itemdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MoneyAndItemData::set_allocated_itemdata(::std::string* itemdata) {
  if (itemdata_ != &::google::protobuf::internal::kEmptyString) {
    delete itemdata_;
  }
  if (itemdata) {
    set_has_itemdata();
    itemdata_ = itemdata;
  } else {
    clear_has_itemdata();
    itemdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// CreateMailData

// required uint32 mailType = 1;
inline bool CreateMailData::has_mailtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreateMailData::set_has_mailtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreateMailData::clear_has_mailtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreateMailData::clear_mailtype() {
  mailtype_ = 0u;
  clear_has_mailtype();
}
inline ::google::protobuf::uint32 CreateMailData::mailtype() const {
  return mailtype_;
}
inline void CreateMailData::set_mailtype(::google::protobuf::uint32 value) {
  set_has_mailtype();
  mailtype_ = value;
}

// optional uint32 fromID = 2;
inline bool CreateMailData::has_fromid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreateMailData::set_has_fromid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreateMailData::clear_has_fromid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreateMailData::clear_fromid() {
  fromid_ = 0u;
  clear_has_fromid();
}
inline ::google::protobuf::uint32 CreateMailData::fromid() const {
  return fromid_;
}
inline void CreateMailData::set_fromid(::google::protobuf::uint32 value) {
  set_has_fromid();
  fromid_ = value;
}

// optional string title = 3;
inline bool CreateMailData::has_title() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CreateMailData::set_has_title() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CreateMailData::clear_has_title() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CreateMailData::clear_title() {
  if (title_ != &::google::protobuf::internal::kEmptyString) {
    title_->clear();
  }
  clear_has_title();
}
inline const ::std::string& CreateMailData::title() const {
  return *title_;
}
inline void CreateMailData::set_title(const ::std::string& value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(value);
}
inline void CreateMailData::set_title(const char* value) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(value);
}
inline void CreateMailData::set_title(const char* value, size_t size) {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  title_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CreateMailData::mutable_title() {
  set_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    title_ = new ::std::string;
  }
  return title_;
}
inline ::std::string* CreateMailData::release_title() {
  clear_has_title();
  if (title_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = title_;
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CreateMailData::set_allocated_title(::std::string* title) {
  if (title_ != &::google::protobuf::internal::kEmptyString) {
    delete title_;
  }
  if (title) {
    set_has_title();
    title_ = title;
  } else {
    clear_has_title();
    title_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string mainText = 4;
inline bool CreateMailData::has_maintext() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CreateMailData::set_has_maintext() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CreateMailData::clear_has_maintext() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CreateMailData::clear_maintext() {
  if (maintext_ != &::google::protobuf::internal::kEmptyString) {
    maintext_->clear();
  }
  clear_has_maintext();
}
inline const ::std::string& CreateMailData::maintext() const {
  return *maintext_;
}
inline void CreateMailData::set_maintext(const ::std::string& value) {
  set_has_maintext();
  if (maintext_ == &::google::protobuf::internal::kEmptyString) {
    maintext_ = new ::std::string;
  }
  maintext_->assign(value);
}
inline void CreateMailData::set_maintext(const char* value) {
  set_has_maintext();
  if (maintext_ == &::google::protobuf::internal::kEmptyString) {
    maintext_ = new ::std::string;
  }
  maintext_->assign(value);
}
inline void CreateMailData::set_maintext(const char* value, size_t size) {
  set_has_maintext();
  if (maintext_ == &::google::protobuf::internal::kEmptyString) {
    maintext_ = new ::std::string;
  }
  maintext_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CreateMailData::mutable_maintext() {
  set_has_maintext();
  if (maintext_ == &::google::protobuf::internal::kEmptyString) {
    maintext_ = new ::std::string;
  }
  return maintext_;
}
inline ::std::string* CreateMailData::release_maintext() {
  clear_has_maintext();
  if (maintext_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = maintext_;
    maintext_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CreateMailData::set_allocated_maintext(::std::string* maintext) {
  if (maintext_ != &::google::protobuf::internal::kEmptyString) {
    delete maintext_;
  }
  if (maintext) {
    set_has_maintext();
    maintext_ = maintext;
  } else {
    clear_has_maintext();
    maintext_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes moneyDataBinary = 5;
inline bool CreateMailData::has_moneydatabinary() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CreateMailData::set_has_moneydatabinary() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CreateMailData::clear_has_moneydatabinary() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CreateMailData::clear_moneydatabinary() {
  if (moneydatabinary_ != &::google::protobuf::internal::kEmptyString) {
    moneydatabinary_->clear();
  }
  clear_has_moneydatabinary();
}
inline const ::std::string& CreateMailData::moneydatabinary() const {
  return *moneydatabinary_;
}
inline void CreateMailData::set_moneydatabinary(const ::std::string& value) {
  set_has_moneydatabinary();
  if (moneydatabinary_ == &::google::protobuf::internal::kEmptyString) {
    moneydatabinary_ = new ::std::string;
  }
  moneydatabinary_->assign(value);
}
inline void CreateMailData::set_moneydatabinary(const char* value) {
  set_has_moneydatabinary();
  if (moneydatabinary_ == &::google::protobuf::internal::kEmptyString) {
    moneydatabinary_ = new ::std::string;
  }
  moneydatabinary_->assign(value);
}
inline void CreateMailData::set_moneydatabinary(const void* value, size_t size) {
  set_has_moneydatabinary();
  if (moneydatabinary_ == &::google::protobuf::internal::kEmptyString) {
    moneydatabinary_ = new ::std::string;
  }
  moneydatabinary_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CreateMailData::mutable_moneydatabinary() {
  set_has_moneydatabinary();
  if (moneydatabinary_ == &::google::protobuf::internal::kEmptyString) {
    moneydatabinary_ = new ::std::string;
  }
  return moneydatabinary_;
}
inline ::std::string* CreateMailData::release_moneydatabinary() {
  clear_has_moneydatabinary();
  if (moneydatabinary_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = moneydatabinary_;
    moneydatabinary_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CreateMailData::set_allocated_moneydatabinary(::std::string* moneydatabinary) {
  if (moneydatabinary_ != &::google::protobuf::internal::kEmptyString) {
    delete moneydatabinary_;
  }
  if (moneydatabinary) {
    set_has_moneydatabinary();
    moneydatabinary_ = moneydatabinary;
  } else {
    clear_has_moneydatabinary();
    moneydatabinary_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes itemData = 6;
inline bool CreateMailData::has_itemdata() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CreateMailData::set_has_itemdata() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CreateMailData::clear_has_itemdata() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CreateMailData::clear_itemdata() {
  if (itemdata_ != &::google::protobuf::internal::kEmptyString) {
    itemdata_->clear();
  }
  clear_has_itemdata();
}
inline const ::std::string& CreateMailData::itemdata() const {
  return *itemdata_;
}
inline void CreateMailData::set_itemdata(const ::std::string& value) {
  set_has_itemdata();
  if (itemdata_ == &::google::protobuf::internal::kEmptyString) {
    itemdata_ = new ::std::string;
  }
  itemdata_->assign(value);
}
inline void CreateMailData::set_itemdata(const char* value) {
  set_has_itemdata();
  if (itemdata_ == &::google::protobuf::internal::kEmptyString) {
    itemdata_ = new ::std::string;
  }
  itemdata_->assign(value);
}
inline void CreateMailData::set_itemdata(const void* value, size_t size) {
  set_has_itemdata();
  if (itemdata_ == &::google::protobuf::internal::kEmptyString) {
    itemdata_ = new ::std::string;
  }
  itemdata_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CreateMailData::mutable_itemdata() {
  set_has_itemdata();
  if (itemdata_ == &::google::protobuf::internal::kEmptyString) {
    itemdata_ = new ::std::string;
  }
  return itemdata_;
}
inline ::std::string* CreateMailData::release_itemdata() {
  clear_has_itemdata();
  if (itemdata_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = itemdata_;
    itemdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void CreateMailData::set_allocated_itemdata(::std::string* itemdata) {
  if (itemdata_ != &::google::protobuf::internal::kEmptyString) {
    delete itemdata_;
  }
  if (itemdata) {
    set_has_itemdata();
    itemdata_ = itemdata;
  } else {
    clear_has_itemdata();
    itemdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated .protocol.mail.MailItem itemList = 7;
inline int CreateMailData::itemlist_size() const {
  return itemlist_.size();
}
inline void CreateMailData::clear_itemlist() {
  itemlist_.Clear();
}
inline const ::protocol::mail::MailItem& CreateMailData::itemlist(int index) const {
  return itemlist_.Get(index);
}
inline ::protocol::mail::MailItem* CreateMailData::mutable_itemlist(int index) {
  return itemlist_.Mutable(index);
}
inline ::protocol::mail::MailItem* CreateMailData::add_itemlist() {
  return itemlist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::mail::MailItem >&
CreateMailData::itemlist() const {
  return itemlist_;
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::mail::MailItem >*
CreateMailData::mutable_itemlist() {
  return &itemlist_;
}

// -------------------------------------------------------------------

// SendSysMailData

// optional .protocol.mail.eSendMailGroupType groupType = 1;
inline bool SendSysMailData::has_grouptype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SendSysMailData::set_has_grouptype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SendSysMailData::clear_has_grouptype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SendSysMailData::clear_grouptype() {
  grouptype_ = 0;
  clear_has_grouptype();
}
inline ::protocol::mail::eSendMailGroupType SendSysMailData::grouptype() const {
  return static_cast< ::protocol::mail::eSendMailGroupType >(grouptype_);
}
inline void SendSysMailData::set_grouptype(::protocol::mail::eSendMailGroupType value) {
  assert(::protocol::mail::eSendMailGroupType_IsValid(value));
  set_has_grouptype();
  grouptype_ = value;
}

// repeated uint32 destUserIDList = 2;
inline int SendSysMailData::destuseridlist_size() const {
  return destuseridlist_.size();
}
inline void SendSysMailData::clear_destuseridlist() {
  destuseridlist_.Clear();
}
inline ::google::protobuf::uint32 SendSysMailData::destuseridlist(int index) const {
  return destuseridlist_.Get(index);
}
inline void SendSysMailData::set_destuseridlist(int index, ::google::protobuf::uint32 value) {
  destuseridlist_.Set(index, value);
}
inline void SendSysMailData::add_destuseridlist(::google::protobuf::uint32 value) {
  destuseridlist_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SendSysMailData::destuseridlist() const {
  return destuseridlist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SendSysMailData::mutable_destuseridlist() {
  return &destuseridlist_;
}

// repeated string destUserNameList = 3;
inline int SendSysMailData::destusernamelist_size() const {
  return destusernamelist_.size();
}
inline void SendSysMailData::clear_destusernamelist() {
  destusernamelist_.Clear();
}
inline const ::std::string& SendSysMailData::destusernamelist(int index) const {
  return destusernamelist_.Get(index);
}
inline ::std::string* SendSysMailData::mutable_destusernamelist(int index) {
  return destusernamelist_.Mutable(index);
}
inline void SendSysMailData::set_destusernamelist(int index, const ::std::string& value) {
  destusernamelist_.Mutable(index)->assign(value);
}
inline void SendSysMailData::set_destusernamelist(int index, const char* value) {
  destusernamelist_.Mutable(index)->assign(value);
}
inline void SendSysMailData::set_destusernamelist(int index, const char* value, size_t size) {
  destusernamelist_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SendSysMailData::add_destusernamelist() {
  return destusernamelist_.Add();
}
inline void SendSysMailData::add_destusernamelist(const ::std::string& value) {
  destusernamelist_.Add()->assign(value);
}
inline void SendSysMailData::add_destusernamelist(const char* value) {
  destusernamelist_.Add()->assign(value);
}
inline void SendSysMailData::add_destusernamelist(const char* value, size_t size) {
  destusernamelist_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
SendSysMailData::destusernamelist() const {
  return destusernamelist_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
SendSysMailData::mutable_destusernamelist() {
  return &destusernamelist_;
}

// optional uint32 srcPlatformType = 4;
inline bool SendSysMailData::has_srcplatformtype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SendSysMailData::set_has_srcplatformtype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SendSysMailData::clear_has_srcplatformtype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SendSysMailData::clear_srcplatformtype() {
  srcplatformtype_ = 0u;
  clear_has_srcplatformtype();
}
inline ::google::protobuf::uint32 SendSysMailData::srcplatformtype() const {
  return srcplatformtype_;
}
inline void SendSysMailData::set_srcplatformtype(::google::protobuf::uint32 value) {
  set_has_srcplatformtype();
  srcplatformtype_ = value;
}

// optional uint32 srcConnID = 5;
inline bool SendSysMailData::has_srcconnid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SendSysMailData::set_has_srcconnid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SendSysMailData::clear_has_srcconnid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SendSysMailData::clear_srcconnid() {
  srcconnid_ = 0u;
  clear_has_srcconnid();
}
inline ::google::protobuf::uint32 SendSysMailData::srcconnid() const {
  return srcconnid_;
}
inline void SendSysMailData::set_srcconnid(::google::protobuf::uint32 value) {
  set_has_srcconnid();
  srcconnid_ = value;
}

// required .protocol.mail.CreateMailData createMailData = 6;
inline bool SendSysMailData::has_createmaildata() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SendSysMailData::set_has_createmaildata() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SendSysMailData::clear_has_createmaildata() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SendSysMailData::clear_createmaildata() {
  if (createmaildata_ != NULL) createmaildata_->::protocol::mail::CreateMailData::Clear();
  clear_has_createmaildata();
}
inline const ::protocol::mail::CreateMailData& SendSysMailData::createmaildata() const {
  return createmaildata_ != NULL ? *createmaildata_ : *default_instance_->createmaildata_;
}
inline ::protocol::mail::CreateMailData* SendSysMailData::mutable_createmaildata() {
  set_has_createmaildata();
  if (createmaildata_ == NULL) createmaildata_ = new ::protocol::mail::CreateMailData;
  return createmaildata_;
}
inline ::protocol::mail::CreateMailData* SendSysMailData::release_createmaildata() {
  clear_has_createmaildata();
  ::protocol::mail::CreateMailData* temp = createmaildata_;
  createmaildata_ = NULL;
  return temp;
}
inline void SendSysMailData::set_allocated_createmaildata(::protocol::mail::CreateMailData* createmaildata) {
  delete createmaildata_;
  createmaildata_ = createmaildata;
  if (createmaildata) {
    set_has_createmaildata();
  } else {
    clear_has_createmaildata();
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace mail
}  // namespace protocol

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::protocol::mail::eSendMailGroupType>() {
  return ::protocol::mail::eSendMailGroupType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_protocol_2fProto_2fMail_2eproto__INCLUDED
